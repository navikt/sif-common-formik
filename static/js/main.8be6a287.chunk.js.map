{"version":3,"sources":["typed-formik-form/components/helpers/button-row/ButtonRow.tsx","typed-formik-form/components/typed-formik-form/TypedFormikForm.tsx","typed-formik-form/utils/typedFormErrorUtils.ts","typed-formik-form/components/formik-modal-form-and-list/dialog-form-wrapper/DialogFormWrapper.tsx","typed-formik-form/components/formik-modal-form-and-list/modal/Modal.tsx","typed-formik-form/components/formik-modal-form-and-list/modal-form-and-list/ModalFormAndList.tsx","typed-formik-form/components/formik-modal-form-and-list/FormikModalFormAndList.tsx","typed-formik-form/components/helpers/label-with-info/LabelWithInfo.tsx","typed-formik-form/components/formik-datepicker/datepicker.less","typed-formik-form/components/formik-file-input/file-input/fileInput.less","typed-formik-form/index.ts","typed-formik-form/components/formik-time-input/timeInput.less","dev/styles/dev.less","dev/styles/globalStyles.less","dev/components/app-intl-provider/messages.ts","dev/components/app-intl-provider/AppIntlProvider.tsx","dev/components/svg/NAVLogo.tsx","dev/validation/fødselsnummerValidator.ts","dev/utils/bemUtils.ts","dev/components/box/Box.tsx","dev/components/page-intro/PageIntro.tsx","dev/components/question/Question.tsx","dev/components/tiles/Tiles.tsx","dev/modules/validation/fieldValidationRenderUtils.ts","dev/validation/fieldValidations.ts","dev/validation/hasValue.ts","dev/examples/formik-example/ferieuttak-example/types.ts","dev/examples/formik-example/ferieuttak-example/FerieuttakForm.tsx","dev/examples/formik-example/ferieuttak-example/FerieuttakList.tsx","dev/examples/formik-example/ferieuttak-example/FerieuttakListAndDialog.tsx","dev/examples/formik-example/types.ts","dev/examples/formik-example/typed-form-example/TypedFormExample.tsx","dev/examples/formik-example/FormikExample.tsx","dev/Intro.tsx","dev/config/routeConfig.tsx","dev/components/left-menu/LeftMenu.tsx","dev/DevContent.tsx","dev/DevPage.tsx","App.tsx","index.tsx","typed-formik-form/components/helpers/skjemagruppe-question/SkjemagruppeQuestion.tsx","typed-formik-form/components/formik-datepicker/validateFormikDatepickerDate.ts","typed-formik-form/components/formik-datepicker/FormikDatepicker.tsx","typed-formik-form/components/formik-datepicker/datepickerUtils.ts","typed-formik-form/components/typed-formik-wrapper/TypedFormikWrapper.tsx","typed-formik-form/components/formik-radio-panel-group/FormikRadioPanelGroup.tsx","typed-formik-form/components/formik-time-input/TimeInput.tsx","typed-formik-form/components/formik-time-input/FormikTimeInput.tsx","typed-formik-form/types/index.ts","typed-formik-form/components/formik-checkbox/FormikCheckbox.tsx","typed-formik-form/components/formik-checkbox-panel-group/FormikCheckboxPanelGroup.tsx","typed-formik-form/components/formik-confirmation-checkbox-panel/FormikConfirmationCheckboxPanel.tsx","typed-formik-form/utils/countryUtils.ts","typed-formik-form/components/formik-date-interval-picker/FormikDateIntervalPicker.tsx","typed-formik-form/components/formik-input/FormikInput.tsx","typed-formik-form/components/formik-input-group/FormikInputGroup.tsx","typed-formik-form/components/formik-select/FormikSelect.tsx","typed-formik-form/components/formik-textarea/FormikTextarea.tsx","typed-formik-form/components/formik-yes-or-no-question/FormikYesOrNoQuestion.tsx","typed-formik-form/components/getTypedFormComponents.tsx","typed-formik-form/components/helpers/ValidationErrorLink.tsx","typed-formik-form/components/helpers/ValidationSummary.tsx","typed-formik-form/components/formik-validation-error-summary/FormikValidationErrorSummary.tsx","typed-formik-form/components/formik-file-input/file-input/UploadSvg.tsx","typed-formik-form/components/formik-file-input/file-input/FileInput.tsx","typed-formik-form/components/formik-file-input/FormikFileInput.tsx","typed-formik-form/components/formik-country-select/CountrySelect.tsx","typed-formik-form/components/formik-country-select/FormikCountrySelect.tsx","typed-formik-form/utils/bemUtils.ts","typed-formik-form/components/formik-date-range-picker/dateRangePickerUtils.ts","typed-formik-form/components/formik-date-range-picker/FormikDateRangePicker.tsx"],"names":["ButtonRow","children","align","layout","cls","className","React","Children","map","knapp","index","key","TypedFormikFormContext","createContext","undefined","TypedFormikForm","oldProps","currentProps","onCancel","resetFormOnCancel","includeValidationSummary","submitButtonLabel","cancelButtonLabel","fieldErrorRenderer","onValidSubmit","id","cleanup","includeButtons","runDelayedFormValidation","formik","useFormikContext","handleSubmit","submitCount","setStatus","resetForm","isSubmitting","isValid","isValidating","useState","formSubmitCount","setFormSubmitCout","hasCleanedUp","counter","cleanupState","setCleanupState","ref","useRef","useEffect","current","showErrors","onSubmit","evt","stopPropagation","preventDefault","setValues","values","runCleanup","noValidate","autoComplete","Provider","value","isValidationErrorsVisible","getAndRenderFieldErrorMessage","field","form","errors","getErrorsForField","name","onAfterFieldValueSet","status","setTimeout","validateForm","createTypedFormikFormContext","style","marginTop","FormikValidationErrorSummary","type","htmlType","onClick","getFeilPropForFormikInput","feil","context","elementName","fieldErrors","getIn","Array","isArray","length","flattenFieldErrors","flatErrors","flatten","allErrorKeys","Object","keys","flattendFieldErrors","forEach","errorKey","flattenedKey","indexOf","a","slice","split","returnAllInFrontOfKey","valueKeys","filter","valueKey","substr","unflatten","getValuesForFlattenedKey","getAllErrors","bem","bemUtils","DialogFormWrapper","width","classNames","block","modifier","Modal","isOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","ModalFormAndList","items","listRenderer","formRenderer","labels","error","dialogWidth","onChange","isVisible","modalState","setModalState","resetModal","selectedItem","showListTitle","modalTitle","item","guid","allItems","SkjemagruppeQuestion","legend","listTitle","tag","onEdit","onDelete","i","emptyListText","paddingBottom","mini","addLabel","FormikModalFormAndList","sortFunc","onAfterChange","validate","useContext","updatedValues","sort","setFieldValue","LabelWithInfo","info","infoPlassering","PopoverOrientering","Over","partialPopoverProps","orientering","popoverProps","module","exports","appMessages","nb","nn","AppIntlProvider","locale","onError","messages","NAVLogo","FødselsnummerValidationErrorReason","props","viewBox","fill","fillRule","d","element","e","m","modifierConditional","condition","child","c","bemHelper","Box","margin","padBottom","textAlignCenter","PageIntro","title","Question","marginBottom","Tiles","columns","renderIntlFieldValidationError","intl","formatMessage","parsedValues","valueOrFunc","renderIntlFieldValidationValues","require","FieldValidationErrors","hasValue","v","Ferieland","createFieldValidationError","fieldIsRequiredError","påkrevd","validateYesOrNoIsAnswered","answer","YesOrNo","UNANSWERED","validateRequiredField","validateRequiredList","FerieuttakFormFields","defaultLabels","fromDate","toDate","intervalTitle","okButton","cancelButton","Form","getTypedFormComponents","FerieuttakForm","maxDate","minDate","ferieuttak","fom","tom","land","alleFerieuttak","useIntl","formLabels","FormikWrapper","initialValues","formValues","isFerieuttak","Error","renderForm","commonFieldErrorRenderer","CheckboxPanelGroup","checkboxes","Norge","label","Sverige","Danmark","DateIntervalPicker","fromDatepickerProps","fullscreenOverlay","disabledDateRanges","f","from","to","dateRangeValidation","validateFromDate","ISOStringToDate","validateField","toDatepickerProps","validateToDate","FerieuttakList","getDateTitleString","uttak","prettifyDateExtended","getItemId","getItemTitle","labelRenderer","FerieuttakListAndDialog","FormFields","sortItemsByFom","TypedFormExample","isIntlFieldValidationErrorType","DatePicker","birthdate","CountrySelect","birthCountry","useAlpha3Code","InputGroup","Input","firstname","lastname","YesOrNoQuestion","Under","hasKids","display","flex","FormikTimeInput","time","nameGroup","daterange_from","daterange_to","FormikDateRangePicker","disableWeekend","moment","subtract","add","fromInputProps","toInputProps","files","acceptedExtensions","onFilesSelect","Date","FormikExample","TypedFormikWrapper","console","log","Intro","routes","path","renderContent","isActiveRoute","pathname","lenkeBem","LeftMenu","useHistory","location","route","withRouter","routeConfig","find","getRouteConfig","history","maxWidth","DevPage","App","setAppElement","ReactDOM","render","document","getElementById","validateAll","validations","result","some","r","FormikDatepicker","showYearSelector","fullScreenOnMobile","inputTitle","description","disableFormatValidation","invalidFormatErrorKey","restProps","isWide","useMedia","minWidth","elementId","position","inputName","dateString","errorIntlKey","isISODateString","validateDateString","push","isInvalid","htmlFor","inputId","inputProps","placeholder","limitations","datepickerUtils","parseDateLimitations","calendarSettings","dateToISOString","date","format","getDateFromDateString","getDateStringFromValue","ISO_8601","invalidDateRanges","weekendsNotSelectable","renderFormContent","setSubmitting","setTouched","FormikRadioPanelGroup","radios","useTwoColumns","checked","rb","handleTimeChange","hours","isNaN","minutes","getNewTime","stateTime","parseInt","TimeInput","maxHours","maxMinutes","setStateTime","Math","min","hoursLabelId","minutesLabelId","max","maxLength","newTime","target","onBlur","FormikCheckbox","afterOnChange","newValue","isCheckboxChecked","fieldValues","includes","FormikCheckboxPanelGroup","cb","keyProp","el","FormikConfirmationCheckboxPanel","countries","getCountries","FormikDateIntervalPicker","getPatternForInputMode","inputMode","FormikInput","pattern","FormikInputGroup","errorMsg","isRenderableErrorMsgType","aria-live","tabIndex","FormikSelect","FormikTextarea","FormikYesOrNoQuestion","includeDoNotKnowOption","yes","yesLabel","no","noLabel","doNotKnow","doNotKnowLabel","YES","NO","DO_NOT_KNOW","Checkbox","ConfirmationCheckbox","DateRangePicker","FileInput","RadioPanelGroup","Select","Textarea","ValidationErrorLink","href","stopClickEvent","ValidationSummary","errorMessages","summaryEl","focus","innerRef","tittel","customFeilRender","elementById","skjemaelementId","elementByName","getElementsByName","feilmelding","allErrors","UploadSvg","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileSelectHandler","bind","onFileDropHandler","onFileDragOverHandler","onFileSelect","onKeyPress","fileList","this","dataTransfer","inputElement","which","click","multiple","role","onDragOver","onDrop","accept","Component","FormikFileInput","arrayHelpers","filteredListEØSCountries","countryOptionValue","shouldFilter","createCountryOptions","onluEuAndEftaCountries","lang","names","entries","getNames","b","localeCompare","alpha2ToAlpha3","countryOptionsCache","getCountryOptions","updateCache","options","showOnlyEuAndEftaCountries","FormikCountrySelect","sortDateRange","d1","d2","isSameOrBefore","sortDateRangeByToDate","findClosestDateAfterDate","dates","moments","isAfter","getClosestDateRangeBeforeDate","ranges","rangesBeforeDate","dateRanges","dateRange","isBefore","getRangesEndingBeforeDate","reverse","getClosestDateRangeAfterDate","rangesAfterDate","getRangesStartingAfterDate","getFollowingDate","allowRangesToStartAndStopOnSameDate","getMaxDateForRangeStart","otherRanges","follwingDateRange","followingRangeeDate","getMaxDateForRangeEnd","baseDate","followingDate","getPreceedingDate","getMinDateForRangeStart","preceedingDateRange","preceedingDate","findClosestDateBeforeDate","getMinDateForRangeEnd","findClosestDateBeforeOrEqualDate","fromDateLimitations","toDateLimitations"],"mappings":"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","file":"static/js/main.8be6a287.chunk.js","sourcesContent":["import React from 'react';\nimport './buttonRow.less';\n\nexport interface Props {\n    children: React.ReactNode;\n    align?: 'left' | 'right' | 'center';\n    layout?: 'normal' | 'mobile-50-50' | 'stretch';\n}\n\nconst ButtonRow: React.StatelessComponent<Props> = ({ children, align = 'center', layout = 'normal' }: Props) => {\n    const cls = `buttonRow buttonRow--${align} buttonRow--${layout}`;\n    return (\n        <div className={cls}>\n            {React.Children.map(children, (knapp, index) => (\n                <span key={index} className=\"buttonRow__button\">\n                    {knapp}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nexport default ButtonRow;\n","import React, { createContext, useEffect, useRef, useState } from 'react';\nimport { FieldInputProps, FormikErrors, FormikProps, useFormikContext } from 'formik';\nimport { Knapp } from 'nav-frontend-knapper';\nimport { NavFrontendSkjemaFeil } from '../../types';\nimport { getErrorsForField, isValidationErrorsVisible } from '../../utils/typedFormErrorUtils';\nimport FormikValidationErrorSummary from '../formik-validation-error-summary/FormikValidationErrorSummary';\nimport ButtonRow from '../helpers/button-row/ButtonRow';\n\nexport type FormikErrorRender<FormValues> = (error: FormikErrors<FormValues>) => NavFrontendSkjemaFeil;\n\nexport interface TypedFormikFormProps<FormValues> {\n    children: React.ReactNode;\n    className?: string;\n    includeValidationSummary?: boolean;\n    includeButtons?: boolean;\n    fieldErrorRenderer: FormikErrorRender<FormValues>;\n    resetFormOnCancel?: boolean;\n    submitButtonLabel?: string;\n    cancelButtonLabel?: string;\n    id?: string;\n    cleanup?: (values: FormValues) => FormValues;\n    onValidSubmit?: () => void;\n    onCancel?: () => void;\n    runDelayedFormValidation?: boolean;\n}\n\nexport interface TypedFormikFormContextType {\n    showErrors: boolean;\n    getAndRenderFieldErrorMessage: (field: FieldInputProps<any>, form: FormikProps<any>) => NavFrontendSkjemaFeil;\n    fieldErrorRenderer?: FormikErrorRender<any>;\n    onAfterFieldValueSet: () => void;\n}\n\ninterface SubmitProps {\n    isSubmitting: boolean;\n    isValid: boolean;\n}\nexport const userHasSubmittedValidForm = (oldProps: SubmitProps, currentProps: SubmitProps) =>\n    oldProps.isSubmitting === true && currentProps.isSubmitting === false && currentProps.isValid === true;\n\nexport const TypedFormikFormContext = createContext<TypedFormikFormContextType | undefined>(undefined);\n\nfunction TypedFormikForm<FormValues>({\n    children,\n    onCancel,\n    resetFormOnCancel,\n    className,\n    includeValidationSummary,\n    submitButtonLabel,\n    cancelButtonLabel,\n    fieldErrorRenderer,\n    onValidSubmit,\n    id,\n    cleanup,\n    includeButtons = true,\n    runDelayedFormValidation,\n}: TypedFormikFormProps<FormValues>) {\n    const formik = useFormikContext<FormValues>();\n    const { handleSubmit, submitCount, setStatus, resetForm, isSubmitting, isValid, isValidating } = formik;\n    const [formSubmitCount, setFormSubmitCout] = useState(submitCount);\n    const [cleanupState, setCleanupState] = useState({ hasCleanedUp: false, counter: 0 });\n\n    const ref = useRef<any>({ isSubmitting, isValid });\n\n    useEffect(() => {\n        ref.current = {\n            isSubmitting,\n            isValid,\n        };\n        if (!isSubmitting) {\n            if (submitCount > formSubmitCount) {\n                if (isValid) {\n                    setFormSubmitCout(submitCount);\n                }\n                setStatus({ showErrors: true });\n            } else {\n                setStatus({ showErrors: false });\n            }\n        }\n    }, [submitCount, setStatus, formSubmitCount, isSubmitting, isValid, isValidating]);\n\n    useEffect(() => {\n        cleanupState.hasCleanedUp && handleSubmit();\n    }, [cleanupState, handleSubmit]);\n\n    if (userHasSubmittedValidForm(ref.current, { isValid, isSubmitting })) {\n        if (onValidSubmit) {\n            onValidSubmit();\n        }\n    }\n\n    const runCleanup = (evt: React.FormEvent<HTMLFormElement>) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n        formik.setValues(cleanup ? cleanup(formik.values) : formik.values);\n        setCleanupState({ hasCleanedUp: true, counter: cleanupState.counter + 1 });\n    };\n\n    const onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n        setCleanupState({ ...cleanupState, hasCleanedUp: false });\n        if (cleanup !== undefined) {\n            runCleanup(evt);\n        } else {\n            handleSubmit(evt);\n        }\n    };\n\n    const createTypedFormikFormContext = (): TypedFormikFormContextType => {\n        const showErrors = isValidationErrorsVisible(formik);\n        return {\n            fieldErrorRenderer,\n            showErrors,\n            getAndRenderFieldErrorMessage: (field, form) => {\n                if (showErrors) {\n                    const errors = getErrorsForField(field.name, form.errors);\n                    if (errors) {\n                        return fieldErrorRenderer ? fieldErrorRenderer(errors) : true;\n                    }\n                }\n                return undefined;\n            },\n            onAfterFieldValueSet: () => {\n                if (runDelayedFormValidation && formik.status.showErrors) {\n                    setTimeout(() => {\n                        formik.validateForm();\n                    });\n                }\n            },\n        };\n    };\n\n    return (\n        <form onSubmit={onSubmit} noValidate={true} className={className} id={id} autoComplete=\"off\">\n            <TypedFormikFormContext.Provider value={createTypedFormikFormContext()}>\n                {children}\n                {includeValidationSummary && !formik.isValid && isValidationErrorsVisible(formik) && (\n                    <div style={{ marginTop: '2rem' }}>\n                        <FormikValidationErrorSummary />\n                    </div>\n                )}\n                {includeButtons && (\n                    <div style={{ marginTop: '2rem' }}>\n                        <ButtonRow layout={onCancel ? 'stretch' : 'normal'}>\n                            <Knapp type=\"hoved\" htmlType=\"submit\">\n                                {submitButtonLabel || 'Ok'}\n                            </Knapp>\n                            {onCancel && (\n                                <Knapp\n                                    type=\"flat\"\n                                    htmlType=\"button\"\n                                    onClick={() => {\n                                        if (resetFormOnCancel) {\n                                            resetForm();\n                                        }\n                                        onCancel();\n                                    }}>\n                                    {cancelButtonLabel || 'Avbryt'}\n                                </Knapp>\n                            )}\n                        </ButtonRow>\n                    </div>\n                )}\n            </TypedFormikFormContext.Provider>\n        </form>\n    );\n}\n\nexport default TypedFormikForm;\n","import flatten, { unflatten } from 'flat';\nimport { FieldInputProps, FormikErrors, FormikProps, getIn } from 'formik';\nimport { TypedFormikFormContextType } from '../components/typed-formik-form/TypedFormikForm';\nimport { NavFrontendSkjemaFeil } from '../types';\n\nexport const getFeilPropForFormikInput = ({\n    feil,\n    field,\n    form,\n    context,\n}: {\n    feil: NavFrontendSkjemaFeil;\n    field: FieldInputProps<any>;\n    form: FormikProps<any>;\n    context?: TypedFormikFormContextType;\n}): NavFrontendSkjemaFeil | undefined => {\n    return feil || (context ? context.getAndRenderFieldErrorMessage(field, form) : undefined);\n};\n\nexport const getErrorsForField = <FormValues>(\n    elementName: string,\n    errors: FormikErrors<FormValues>\n): FormikErrors<FormValues> | undefined => {\n    const fieldErrors = getIn(errors, elementName);\n    if (Array.isArray(fieldErrors) && fieldErrors.length === 1 && fieldErrors[0] === null) {\n        // Filter out fieldArray errors containing only null item\n        return undefined;\n    }\n    return fieldErrors;\n};\n\nexport const isValidationErrorsVisible = (formik: FormikProps<any>): boolean => {\n    return formik?.status?.showErrors === true;\n};\n\nexport const returnAllInFrontOfKey = (flattenedKey: string): string | undefined => {\n    const searchString = '.key';\n    if (flattenedKey.indexOf(searchString) >= 0) {\n        const a = flattenedKey.slice().split(searchString);\n        if (a[0]) {\n            return a[0];\n        }\n    }\n    return undefined;\n};\n\ninterface FlattendErrors {\n    [key: string]: any;\n}\n\nconst getValuesForFlattenedKey = (flatErrors: FlattendErrors, errorKey: string): any => {\n    const allErrorKeys = Object.keys(flatErrors);\n    const valueKeys = allErrorKeys.filter((key) => key.indexOf(`${errorKey}.values`) >= 0);\n    if (valueKeys.length > 0) {\n        const values = {};\n        valueKeys.forEach((key) => {\n            const valueKey = key.substr(key.indexOf(`.values`) + 8);\n            // const valueKey = valueKeyWithIndex.substr(valueKeyWithIndex.indexOf('.') + 1); // Remove index added by flatten\n            values[valueKey] = unflatten(flatErrors[key]);\n        });\n        return values;\n    }\n    return undefined;\n};\n\nexport const flattenFieldErrors = (errors: any) => {\n    const flatErrors = flatten(errors) as FlattendErrors;\n    const allErrorKeys = Object.keys(flatErrors);\n    const flattendFieldErrors = {};\n    allErrorKeys.forEach((key) => {\n        const errorKey = returnAllInFrontOfKey(key);\n        if (errorKey) {\n            const values = getValuesForFlattenedKey(flatErrors, errorKey);\n            flattendFieldErrors[errorKey] = {\n                key: flatErrors[errorKey + '.key'],\n                values,\n            };\n        }\n    });\n    return flattendFieldErrors;\n};\n\nexport function getAllErrors<FormValues>(formik: FormikProps<FormValues>): FormikErrors<FormValues> | undefined {\n    const errors = formik && formik.errors && Object.keys(formik.errors).length > 0 ? formik.errors : undefined;\n    if (errors) {\n        const numberOfErrors = Object.keys(errors).length;\n        if (numberOfErrors > 0 && isValidationErrorsVisible(formik)) {\n            return flattenFieldErrors(errors);\n        }\n    }\n    return undefined;\n}\n","import React from 'react';\nimport bemUtils from '../../../utils/bemUtils';\nimport './dialogFormWrapper.less';\n\nconst bem = bemUtils('dialogFormWrapper');\n\nexport type DialogFormWrapperWidths = 'narrow' | 'wide';\n\ninterface Props {\n    width?: DialogFormWrapperWidths;\n    children: React.ReactNode;\n}\n\nconst DialogFormWrapper = ({ width = 'narrow', children }: Props) => (\n    <div className={bem.classNames(bem.block, bem.modifier(width))}>{children}</div>\n);\n\nexport default DialogFormWrapper;\n","import React from 'react';\nimport { default as NFModal } from 'nav-frontend-modal';\nimport './modal.less';\n\nexport interface ModalProps {\n    className?: string;\n    isOpen: boolean;\n    onRequestClose: () => void;\n    contentLabel: string;\n    children: React.ReactNode;\n    shouldCloseOnOverlayClick?: boolean;\n}\n\nconst Modal = ({\n    isOpen,\n    onRequestClose,\n    contentLabel,\n    className,\n    shouldCloseOnOverlayClick = false,\n    children,\n}: ModalProps) => (\n    <NFModal\n        className={`modal ${className ? className : ''}`}\n        isOpen={isOpen}\n        shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n        contentLabel={contentLabel}\n        onRequestClose={onRequestClose}>\n        <article className=\"modal__content\">{children}</article>\n    </NFModal>\n);\n\nexport default Modal;\n","import React from 'react';\nimport { AlertStripeInfo } from 'nav-frontend-alertstriper';\nimport { guid } from 'nav-frontend-js-utils';\nimport { Knapp } from 'nav-frontend-knapper';\nimport SkjemagruppeQuestion from '../../helpers/skjemagruppe-question/SkjemagruppeQuestion';\nimport DialogFormWrapper, { DialogFormWrapperWidths } from '../dialog-form-wrapper/DialogFormWrapper';\nimport Modal from '../modal/Modal';\nimport { ModalFormAndListLabels, ModalFormAndListListItemBase } from '../types';\nimport './modalFormAndList.less';\n\ntype ModalFormRenderer<ItemType> = (props: {\n    item?: ItemType;\n    allItems?: ItemType[];\n    onSubmit: (item: ItemType) => void;\n    onCancel: () => void;\n}) => React.ReactNode;\n\ntype ListRenderer<ItemType> = (props: {\n    items: ItemType[];\n    onEdit: (item: ItemType) => void;\n    onDelete: (item: ItemType) => void;\n}) => React.ReactNode;\n\nexport interface ModalFormAndListProps<ItemType extends ModalFormAndListListItemBase> {\n    labels: ModalFormAndListLabels;\n    listRenderer: ListRenderer<ItemType>;\n    formRenderer: ModalFormRenderer<ItemType>;\n    dialogWidth?: DialogFormWrapperWidths;\n}\ninterface PrivateProps<ItemType> {\n    onChange: (data: ItemType[]) => void;\n    items: ItemType[];\n    error?: React.ReactNode | boolean;\n}\n\ntype Props<ItemType> = ModalFormAndListProps<ItemType> & PrivateProps<ItemType>;\n\nfunction ModalFormAndList<ItemType extends ModalFormAndListListItemBase>({\n    items = [],\n    listRenderer,\n    formRenderer,\n    labels,\n    error,\n    dialogWidth,\n    onChange,\n}: Props<ItemType>) {\n    const [modalState, setModalState] = React.useState<{ isVisible: boolean; selectedItem?: ItemType }>({\n        isVisible: false,\n    });\n\n    const handleOnSubmit = (values: ItemType) => {\n        if (values.id) {\n            onChange([...items.filter((item) => item.id !== values.id), values]);\n        } else {\n            onChange([...items, { id: guid(), ...values }]);\n        }\n        setModalState({ isVisible: false });\n    };\n\n    const handleEdit = (item: ItemType) => {\n        setModalState({ isVisible: true, selectedItem: item });\n    };\n\n    const handleDelete = (item: ItemType) => {\n        onChange([...items.filter((i) => i.id !== item.id)]);\n    };\n\n    const resetModal = () => {\n        setModalState({ isVisible: false, selectedItem: undefined });\n    };\n\n    const showListTitle = items.length > 0;\n    return (\n        <>\n            <Modal isOpen={modalState.isVisible} contentLabel={labels.modalTitle} onRequestClose={resetModal}>\n                <DialogFormWrapper width={dialogWidth}>\n                    {formRenderer({\n                        onSubmit: handleOnSubmit,\n                        onCancel: resetModal,\n                        item: modalState.selectedItem,\n                        allItems: items,\n                    })}\n                </DialogFormWrapper>\n            </Modal>\n            <SkjemagruppeQuestion legend={showListTitle ? labels.listTitle : undefined} feil={error} tag=\"div\">\n                {items.length > 0 && (\n                    <div className=\"modalFormAndList__listWrapper\">\n                        {listRenderer({ items, onEdit: handleEdit, onDelete: handleDelete })}\n                    </div>\n                )}\n                {items.length === 0 && labels.emptyListText && (\n                    <div style={{ paddingBottom: '2rem' }}>\n                        <AlertStripeInfo>{labels.emptyListText}</AlertStripeInfo>\n                    </div>\n                )}\n                <div style={showListTitle ? { marginTop: '1rem' } : undefined}>\n                    <Knapp htmlType=\"button\" onClick={() => setModalState({ isVisible: true })} mini={true}>\n                        {labels.addLabel}\n                    </Knapp>\n                </div>\n            </SkjemagruppeQuestion>\n        </>\n    );\n}\n\nexport default ModalFormAndList;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { FormikValidateFunction, NavFrontendSkjemaFeil } from '../../types';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport ModalFormAndList, { ModalFormAndListProps } from './modal-form-and-list/ModalFormAndList';\n\nexport interface FormikModalFormAndListProps<FieldName, ItemType> extends ModalFormAndListProps<ItemType> {\n    name: FieldName;\n    feil?: NavFrontendSkjemaFeil;\n    validate?: FormikValidateFunction;\n    sortFunc?: (a: ItemType, b: ItemType) => number;\n    onAfterChange?: (values: ItemType[]) => void;\n}\n\nfunction FormikModalFormAndList<FieldName, ItemType>({\n    name,\n    labels,\n    listRenderer,\n    formRenderer,\n    sortFunc,\n    onAfterChange,\n    feil,\n    validate,\n}: FormikModalFormAndListProps<FieldName, ItemType>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field name={name} validate={validate}>\n            {({ field, form }: FieldProps<ItemType[]>) => {\n                return (\n                    <ModalFormAndList<ItemType>\n                        labels={labels}\n                        items={field.value}\n                        error={feil || (context ? context.getAndRenderFieldErrorMessage(field, form) : undefined)}\n                        onChange={(values) => {\n                            const updatedValues = sortFunc ? values.sort(sortFunc) : values;\n                            form.setFieldValue(field.name, updatedValues);\n                            if (onAfterChange) {\n                                onAfterChange(updatedValues);\n                            }\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}\n                        formRenderer={formRenderer}\n                        listRenderer={({ onEdit, onDelete }) => listRenderer({ items: field.value, onDelete, onEdit })}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikModalFormAndList;\n","import React from 'react';\nimport Hjelpetekst from 'nav-frontend-hjelpetekst';\nimport { PopoverOrientering } from 'nav-frontend-popover';\nimport { Element } from 'nav-frontend-typografi';\nimport './labelWithInfo.less';\n\ninterface LabelWithHelperText {\n    children: React.ReactNode;\n    info?: React.ReactNode;\n    infoPlassering?: PopoverOrientering;\n}\n\nconst LabelWithInfo = ({ children, info, infoPlassering = PopoverOrientering.Over }: LabelWithHelperText) => {\n    if (!children) {\n        return null;\n    }\n    if (info === undefined) {\n        return <Element tag=\"span\">{children}</Element>;\n    }\n\n    const partialPopoverProps: any = {\n        orientering: infoPlassering,\n    };\n    return (\n        <Element tag=\"span\" className=\"labelWithInfo\">\n            {children}\n            {info && (\n                <Hjelpetekst popoverProps={partialPopoverProps} className=\"labelWithInfo__info\">\n                    {info}\n                </Hjelpetekst>\n            )}\n        </Element>\n    );\n};\n\nexport default LabelWithInfo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#3e3832\",\"navGra80\":\"#59514b\",\"navGra60\":\"#78706a\",\"navGra40\":\"#b7b1a9\",\"navGra20\":\"#c6c2bf\",\"navLysGra\":\"#e9e7e7\",\"fokusFarge\":\"#254b6d\",\"orangeFocus\":\"#ffbd66\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#e9e7e7\",\"grayIcon\":\"#b7b1a9\",\"grayModia\":\"#333333\",\"grayInactive\":\"#78706a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten20\":\"#38a161\",\"navGronnLighten40\":\"#6ab889\",\"navGronnLighten60\":\"#9bd0b0\",\"navGronnLighten80\":\"#cde7d8\",\"navGronnDarken20\":\"#117938\",\"navGronnDarken40\":\"#1c6937\",\"navGronnDarken60\":\"#285835\",\"navGronnDarken80\":\"#334834\",\"navLimeGronnLighten20\":\"#b5bd33\",\"navLimeGronnLighten40\":\"#c7ce66\",\"navLimeGronnLighten60\":\"#dade99\",\"navLimeGronnLighten80\":\"#ecefcc\",\"navLimeGronnDarken20\":\"#8e960a\",\"navLimeGronnDarken40\":\"#7a7e14\",\"navLimeGronnDarken60\":\"#66671e\",\"navLimeGronnDarken80\":\"#524f28\",\"navLysBlaLighten20\":\"#85d5f0\",\"navLysBlaLighten40\":\"#a3e0f4\",\"navLysBlaLighten60\":\"#c2eaf7\",\"navLysBlaLighten80\":\"#e0f5fb\",\"navLysBlaDarken20\":\"#5eaec7\",\"navLysBlaDarken40\":\"#5690a2\",\"navLysBlaDarken60\":\"#4e737c\",\"navLysBlaDarken80\":\"#465557\",\"navBlaLighten20\":\"#3385d1\",\"navBlaLighten40\":\"#66a4dc\",\"navBlaLighten60\":\"#99c2e8\",\"navBlaLighten80\":\"#cce1f3\",\"navBlaDarken20\":\"#0c5ea8\",\"navBlaDarken40\":\"#19548a\",\"navBlaDarken60\":\"#254b6d\",\"navBlaDarken80\":\"#32414f\",\"navDypBlaLighten20\":\"#337c9b\",\"navDypBlaLighten40\":\"#669db4\",\"navDypBlaLighten60\":\"#99bdcd\",\"navDypBlaLighten80\":\"#ccdee6\",\"navDypBlaDarken20\":\"#0c5472\",\"navDypBlaDarken40\":\"#194d62\",\"navDypBlaDarken60\":\"#254652\",\"navDypBlaDarken80\":\"#323f42\",\"navLillaLighten20\":\"#826ba1\",\"navLillaLighten40\":\"#a190b8\",\"navLillaLighten60\":\"#c1b5d0\",\"navLillaLighten80\":\"#e0dae7\",\"navLillaDarken20\":\"#5c4378\",\"navLillaDarken40\":\"#544066\",\"navLillaDarken60\":\"#4d3e55\",\"navLillaDarken80\":\"#453b43\",\"navRodLighten20\":\"#cf3333\",\"navRodLighten40\":\"#db6666\",\"navRodLighten60\":\"#e79999\",\"navRodLighten80\":\"#f3cccc\",\"navRodDarken20\":\"#a80b0a\",\"navRodDarken40\":\"#8e1614\",\"navRodDarken60\":\"#73221e\",\"navRodDarken80\":\"#592d28\",\"navOransjeLighten20\":\"#ffa733\",\"navOransjeLighten40\":\"#ffbd66\",\"navOransjeLighten60\":\"#ffd399\",\"navOransjeLighten80\":\"#ffe9cc\",\"navOransjeDarken20\":\"#d87f0a\",\"navOransjeDarken40\":\"#b26d14\",\"navOransjeDarken60\":\"#8b5c1e\",\"navOransjeDarken80\":\"#654a28\",\"orangeFocusLighten20\":\"#ffca85\",\"orangeFocusLighten40\":\"#ffd7a3\",\"orangeFocusLighten60\":\"#ffe5c2\",\"orangeFocusLighten80\":\"#fff2e0\",\"orangeFocusDarken20\":\"#d8a25c\",\"orangeFocusDarken40\":\"#b28851\",\"orangeFocusDarken60\":\"#8b6d47\",\"orangeFocusDarken80\":\"#65533c\",\"redErrorLighten20\":\"#c86151\",\"redErrorLighten40\":\"#d6897d\",\"redErrorLighten60\":\"#e3b0a8\",\"redErrorLighten80\":\"#f1d8d4\",\"redErrorDarken20\":\"#a13a28\",\"redErrorDarken40\":\"#88392b\",\"redErrorDarken60\":\"#70392d\",\"redErrorDarken80\":\"#573830\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#3e3832\",\"navGra80\":\"#59514b\",\"navGra60\":\"#78706a\",\"navGra40\":\"#b7b1a9\",\"navGra20\":\"#c6c2bf\",\"navLysGra\":\"#e9e7e7\",\"fokusFarge\":\"#254b6d\",\"orangeFocus\":\"#ffbd66\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#e9e7e7\",\"grayIcon\":\"#b7b1a9\",\"grayModia\":\"#333333\",\"grayInactive\":\"#78706a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten20\":\"#38a161\",\"navGronnLighten40\":\"#6ab889\",\"navGronnLighten60\":\"#9bd0b0\",\"navGronnLighten80\":\"#cde7d8\",\"navGronnDarken20\":\"#117938\",\"navGronnDarken40\":\"#1c6937\",\"navGronnDarken60\":\"#285835\",\"navGronnDarken80\":\"#334834\",\"navLimeGronnLighten20\":\"#b5bd33\",\"navLimeGronnLighten40\":\"#c7ce66\",\"navLimeGronnLighten60\":\"#dade99\",\"navLimeGronnLighten80\":\"#ecefcc\",\"navLimeGronnDarken20\":\"#8e960a\",\"navLimeGronnDarken40\":\"#7a7e14\",\"navLimeGronnDarken60\":\"#66671e\",\"navLimeGronnDarken80\":\"#524f28\",\"navLysBlaLighten20\":\"#85d5f0\",\"navLysBlaLighten40\":\"#a3e0f4\",\"navLysBlaLighten60\":\"#c2eaf7\",\"navLysBlaLighten80\":\"#e0f5fb\",\"navLysBlaDarken20\":\"#5eaec7\",\"navLysBlaDarken40\":\"#5690a2\",\"navLysBlaDarken60\":\"#4e737c\",\"navLysBlaDarken80\":\"#465557\",\"navBlaLighten20\":\"#3385d1\",\"navBlaLighten40\":\"#66a4dc\",\"navBlaLighten60\":\"#99c2e8\",\"navBlaLighten80\":\"#cce1f3\",\"navBlaDarken20\":\"#0c5ea8\",\"navBlaDarken40\":\"#19548a\",\"navBlaDarken60\":\"#254b6d\",\"navBlaDarken80\":\"#32414f\",\"navDypBlaLighten20\":\"#337c9b\",\"navDypBlaLighten40\":\"#669db4\",\"navDypBlaLighten60\":\"#99bdcd\",\"navDypBlaLighten80\":\"#ccdee6\",\"navDypBlaDarken20\":\"#0c5472\",\"navDypBlaDarken40\":\"#194d62\",\"navDypBlaDarken60\":\"#254652\",\"navDypBlaDarken80\":\"#323f42\",\"navLillaLighten20\":\"#826ba1\",\"navLillaLighten40\":\"#a190b8\",\"navLillaLighten60\":\"#c1b5d0\",\"navLillaLighten80\":\"#e0dae7\",\"navLillaDarken20\":\"#5c4378\",\"navLillaDarken40\":\"#544066\",\"navLillaDarken60\":\"#4d3e55\",\"navLillaDarken80\":\"#453b43\",\"navRodLighten20\":\"#cf3333\",\"navRodLighten40\":\"#db6666\",\"navRodLighten60\":\"#e79999\",\"navRodLighten80\":\"#f3cccc\",\"navRodDarken20\":\"#a80b0a\",\"navRodDarken40\":\"#8e1614\",\"navRodDarken60\":\"#73221e\",\"navRodDarken80\":\"#592d28\",\"navOransjeLighten20\":\"#ffa733\",\"navOransjeLighten40\":\"#ffbd66\",\"navOransjeLighten60\":\"#ffd399\",\"navOransjeLighten80\":\"#ffe9cc\",\"navOransjeDarken20\":\"#d87f0a\",\"navOransjeDarken40\":\"#b26d14\",\"navOransjeDarken60\":\"#8b5c1e\",\"navOransjeDarken80\":\"#654a28\",\"orangeFocusLighten20\":\"#ffca85\",\"orangeFocusLighten40\":\"#ffd7a3\",\"orangeFocusLighten60\":\"#ffe5c2\",\"orangeFocusLighten80\":\"#fff2e0\",\"orangeFocusDarken20\":\"#d8a25c\",\"orangeFocusDarken40\":\"#b28851\",\"orangeFocusDarken60\":\"#8b6d47\",\"orangeFocusDarken80\":\"#65533c\",\"redErrorLighten20\":\"#c86151\",\"redErrorLighten40\":\"#d6897d\",\"redErrorLighten60\":\"#e3b0a8\",\"redErrorLighten80\":\"#f1d8d4\",\"redErrorDarken20\":\"#a13a28\",\"redErrorDarken40\":\"#88392b\",\"redErrorDarken60\":\"#70392d\",\"redErrorDarken80\":\"#573830\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\"};","export { default as FormikCheckbox } from './components/formik-checkbox/FormikCheckbox';\nexport { default as FormikCheckboxPanelGroup } from './components/formik-checkbox-panel-group/FormikCheckboxPanelGroup';\nexport { default as FormikConfirmationCheckboxPanel } from './components/formik-confirmation-checkbox-panel/FormikConfirmationCheckboxPanel';\nexport { default as FormikCountrySelect } from './components/formik-country-select/FormikCountrySelect';\nexport { default as FormikDateIntervalPicker } from './components/formik-date-interval-picker/FormikDateIntervalPicker';\nexport { default as FormikDatepicker } from './components/formik-datepicker/FormikDatepicker';\nexport { default as FormikFileInput } from './components/formik-file-input/FormikFileInput';\nexport { default as FormikInput } from './components/formik-input/FormikInput';\nexport { default as FormikInputGroup } from './components/formik-input-group/FormikInputGroup';\nexport { default as FormikModalFormAndList } from './components/formik-modal-form-and-list/FormikModalFormAndList';\nexport { default as FormikRadioPanelGroup } from './components/formik-radio-panel-group/FormikRadioPanelGroup';\nexport { default as FormikSelect } from './components/formik-select/FormikSelect';\nexport { default as FormikTextarea } from './components/formik-textarea/FormikTextarea';\nexport { default as FormikTimeInput } from './components/formik-time-input/FormikTimeInput';\nexport { default as FormikValidationErrorSummary } from './components/formik-validation-error-summary/FormikValidationErrorSummary';\nexport { default as FormikYesOrNoQuestion } from './components/formik-yes-or-no-question/FormikYesOrNoQuestion';\n\nexport { default as TypedFormikForm, TypedFormikFormContext } from './components/typed-formik-form/TypedFormikForm';\nexport { default as TypedFormikWrapper } from './components/typed-formik-wrapper/TypedFormikWrapper';\n\nexport { default as LabelWithInfo } from './components/helpers/label-with-info/LabelWithInfo';\nexport { default as SkjemagruppeQuestion } from './components/helpers/skjemagruppe-question/SkjemagruppeQuestion';\n\nexport * from './types';\nexport * from './utils/countryUtils';\nexport * from './utils/formikUtils';\nexport * from './utils/typedFormErrorUtils';\nexport * from './components/getTypedFormComponents';\nexport { ISOStringToDate, dateToISOString } from './components/formik-datepicker/datepickerUtils';\nexport * from './components/formik-modal-form-and-list/types';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#3e3832\",\"navGra80\":\"#59514b\",\"navGra60\":\"#78706a\",\"navGra40\":\"#b7b1a9\",\"navGra20\":\"#c6c2bf\",\"navLysGra\":\"#e9e7e7\",\"fokusFarge\":\"#254b6d\",\"orangeFocus\":\"#ffbd66\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#e9e7e7\",\"grayIcon\":\"#b7b1a9\",\"grayModia\":\"#333333\",\"grayInactive\":\"#78706a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten20\":\"#38a161\",\"navGronnLighten40\":\"#6ab889\",\"navGronnLighten60\":\"#9bd0b0\",\"navGronnLighten80\":\"#cde7d8\",\"navGronnDarken20\":\"#117938\",\"navGronnDarken40\":\"#1c6937\",\"navGronnDarken60\":\"#285835\",\"navGronnDarken80\":\"#334834\",\"navLimeGronnLighten20\":\"#b5bd33\",\"navLimeGronnLighten40\":\"#c7ce66\",\"navLimeGronnLighten60\":\"#dade99\",\"navLimeGronnLighten80\":\"#ecefcc\",\"navLimeGronnDarken20\":\"#8e960a\",\"navLimeGronnDarken40\":\"#7a7e14\",\"navLimeGronnDarken60\":\"#66671e\",\"navLimeGronnDarken80\":\"#524f28\",\"navLysBlaLighten20\":\"#85d5f0\",\"navLysBlaLighten40\":\"#a3e0f4\",\"navLysBlaLighten60\":\"#c2eaf7\",\"navLysBlaLighten80\":\"#e0f5fb\",\"navLysBlaDarken20\":\"#5eaec7\",\"navLysBlaDarken40\":\"#5690a2\",\"navLysBlaDarken60\":\"#4e737c\",\"navLysBlaDarken80\":\"#465557\",\"navBlaLighten20\":\"#3385d1\",\"navBlaLighten40\":\"#66a4dc\",\"navBlaLighten60\":\"#99c2e8\",\"navBlaLighten80\":\"#cce1f3\",\"navBlaDarken20\":\"#0c5ea8\",\"navBlaDarken40\":\"#19548a\",\"navBlaDarken60\":\"#254b6d\",\"navBlaDarken80\":\"#32414f\",\"navDypBlaLighten20\":\"#337c9b\",\"navDypBlaLighten40\":\"#669db4\",\"navDypBlaLighten60\":\"#99bdcd\",\"navDypBlaLighten80\":\"#ccdee6\",\"navDypBlaDarken20\":\"#0c5472\",\"navDypBlaDarken40\":\"#194d62\",\"navDypBlaDarken60\":\"#254652\",\"navDypBlaDarken80\":\"#323f42\",\"navLillaLighten20\":\"#826ba1\",\"navLillaLighten40\":\"#a190b8\",\"navLillaLighten60\":\"#c1b5d0\",\"navLillaLighten80\":\"#e0dae7\",\"navLillaDarken20\":\"#5c4378\",\"navLillaDarken40\":\"#544066\",\"navLillaDarken60\":\"#4d3e55\",\"navLillaDarken80\":\"#453b43\",\"navRodLighten20\":\"#cf3333\",\"navRodLighten40\":\"#db6666\",\"navRodLighten60\":\"#e79999\",\"navRodLighten80\":\"#f3cccc\",\"navRodDarken20\":\"#a80b0a\",\"navRodDarken40\":\"#8e1614\",\"navRodDarken60\":\"#73221e\",\"navRodDarken80\":\"#592d28\",\"navOransjeLighten20\":\"#ffa733\",\"navOransjeLighten40\":\"#ffbd66\",\"navOransjeLighten60\":\"#ffd399\",\"navOransjeLighten80\":\"#ffe9cc\",\"navOransjeDarken20\":\"#d87f0a\",\"navOransjeDarken40\":\"#b26d14\",\"navOransjeDarken60\":\"#8b5c1e\",\"navOransjeDarken80\":\"#654a28\",\"orangeFocusLighten20\":\"#ffca85\",\"orangeFocusLighten40\":\"#ffd7a3\",\"orangeFocusLighten60\":\"#ffe5c2\",\"orangeFocusLighten80\":\"#fff2e0\",\"orangeFocusDarken20\":\"#d8a25c\",\"orangeFocusDarken40\":\"#b28851\",\"orangeFocusDarken60\":\"#8b6d47\",\"orangeFocusDarken80\":\"#65533c\",\"redErrorLighten20\":\"#c86151\",\"redErrorLighten40\":\"#d6897d\",\"redErrorLighten60\":\"#e3b0a8\",\"redErrorLighten80\":\"#f1d8d4\",\"redErrorDarken20\":\"#a13a28\",\"redErrorDarken40\":\"#88392b\",\"redErrorDarken60\":\"#70392d\",\"redErrorDarken80\":\"#573830\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#3e3832\",\"navGra80\":\"#59514b\",\"navGra60\":\"#78706a\",\"navGra40\":\"#b7b1a9\",\"navGra20\":\"#c6c2bf\",\"navLysGra\":\"#e9e7e7\",\"fokusFarge\":\"#254b6d\",\"orangeFocus\":\"#ffbd66\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#e9e7e7\",\"grayIcon\":\"#b7b1a9\",\"grayModia\":\"#333333\",\"grayInactive\":\"#78706a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten20\":\"#38a161\",\"navGronnLighten40\":\"#6ab889\",\"navGronnLighten60\":\"#9bd0b0\",\"navGronnLighten80\":\"#cde7d8\",\"navGronnDarken20\":\"#117938\",\"navGronnDarken40\":\"#1c6937\",\"navGronnDarken60\":\"#285835\",\"navGronnDarken80\":\"#334834\",\"navLimeGronnLighten20\":\"#b5bd33\",\"navLimeGronnLighten40\":\"#c7ce66\",\"navLimeGronnLighten60\":\"#dade99\",\"navLimeGronnLighten80\":\"#ecefcc\",\"navLimeGronnDarken20\":\"#8e960a\",\"navLimeGronnDarken40\":\"#7a7e14\",\"navLimeGronnDarken60\":\"#66671e\",\"navLimeGronnDarken80\":\"#524f28\",\"navLysBlaLighten20\":\"#85d5f0\",\"navLysBlaLighten40\":\"#a3e0f4\",\"navLysBlaLighten60\":\"#c2eaf7\",\"navLysBlaLighten80\":\"#e0f5fb\",\"navLysBlaDarken20\":\"#5eaec7\",\"navLysBlaDarken40\":\"#5690a2\",\"navLysBlaDarken60\":\"#4e737c\",\"navLysBlaDarken80\":\"#465557\",\"navBlaLighten20\":\"#3385d1\",\"navBlaLighten40\":\"#66a4dc\",\"navBlaLighten60\":\"#99c2e8\",\"navBlaLighten80\":\"#cce1f3\",\"navBlaDarken20\":\"#0c5ea8\",\"navBlaDarken40\":\"#19548a\",\"navBlaDarken60\":\"#254b6d\",\"navBlaDarken80\":\"#32414f\",\"navDypBlaLighten20\":\"#337c9b\",\"navDypBlaLighten40\":\"#669db4\",\"navDypBlaLighten60\":\"#99bdcd\",\"navDypBlaLighten80\":\"#ccdee6\",\"navDypBlaDarken20\":\"#0c5472\",\"navDypBlaDarken40\":\"#194d62\",\"navDypBlaDarken60\":\"#254652\",\"navDypBlaDarken80\":\"#323f42\",\"navLillaLighten20\":\"#826ba1\",\"navLillaLighten40\":\"#a190b8\",\"navLillaLighten60\":\"#c1b5d0\",\"navLillaLighten80\":\"#e0dae7\",\"navLillaDarken20\":\"#5c4378\",\"navLillaDarken40\":\"#544066\",\"navLillaDarken60\":\"#4d3e55\",\"navLillaDarken80\":\"#453b43\",\"navRodLighten20\":\"#cf3333\",\"navRodLighten40\":\"#db6666\",\"navRodLighten60\":\"#e79999\",\"navRodLighten80\":\"#f3cccc\",\"navRodDarken20\":\"#a80b0a\",\"navRodDarken40\":\"#8e1614\",\"navRodDarken60\":\"#73221e\",\"navRodDarken80\":\"#592d28\",\"navOransjeLighten20\":\"#ffa733\",\"navOransjeLighten40\":\"#ffbd66\",\"navOransjeLighten60\":\"#ffd399\",\"navOransjeLighten80\":\"#ffe9cc\",\"navOransjeDarken20\":\"#d87f0a\",\"navOransjeDarken40\":\"#b26d14\",\"navOransjeDarken60\":\"#8b5c1e\",\"navOransjeDarken80\":\"#654a28\",\"orangeFocusLighten20\":\"#ffca85\",\"orangeFocusLighten40\":\"#ffd7a3\",\"orangeFocusLighten60\":\"#ffe5c2\",\"orangeFocusLighten80\":\"#fff2e0\",\"orangeFocusDarken20\":\"#d8a25c\",\"orangeFocusDarken40\":\"#b28851\",\"orangeFocusDarken60\":\"#8b6d47\",\"orangeFocusDarken80\":\"#65533c\",\"redErrorLighten20\":\"#c86151\",\"redErrorLighten40\":\"#d6897d\",\"redErrorLighten60\":\"#e3b0a8\",\"redErrorLighten80\":\"#f1d8d4\",\"redErrorDarken20\":\"#a13a28\",\"redErrorDarken40\":\"#88392b\",\"redErrorDarken60\":\"#70392d\",\"redErrorDarken80\":\"#573830\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navRod\":\"#c30000\",\"navOransje\":\"#ff9100\",\"navLimeGronn\":\"#a2ad00\",\"navGronn\":\"#06893a\",\"navLilla\":\"#634689\",\"navDypBla\":\"#005b82\",\"navBla\":\"#0067c5\",\"navLysBla\":\"#66cbec\",\"navMorkGra\":\"#3e3832\",\"navGra80\":\"#59514b\",\"navGra60\":\"#78706a\",\"navGra40\":\"#b7b1a9\",\"navGra20\":\"#c6c2bf\",\"navLysGra\":\"#e9e7e7\",\"fokusFarge\":\"#254b6d\",\"orangeFocus\":\"#ffbd66\",\"redError\":\"#ba3a26\",\"white\":\"#fff\",\"grayBackground\":\"#e9e7e7\",\"grayIcon\":\"#b7b1a9\",\"grayModia\":\"#333333\",\"grayInactive\":\"#78706a\",\"pinkErrorBg\":\"#f3e3e3\",\"navGronnLighten20\":\"#38a161\",\"navGronnLighten40\":\"#6ab889\",\"navGronnLighten60\":\"#9bd0b0\",\"navGronnLighten80\":\"#cde7d8\",\"navGronnDarken20\":\"#117938\",\"navGronnDarken40\":\"#1c6937\",\"navGronnDarken60\":\"#285835\",\"navGronnDarken80\":\"#334834\",\"navLimeGronnLighten20\":\"#b5bd33\",\"navLimeGronnLighten40\":\"#c7ce66\",\"navLimeGronnLighten60\":\"#dade99\",\"navLimeGronnLighten80\":\"#ecefcc\",\"navLimeGronnDarken20\":\"#8e960a\",\"navLimeGronnDarken40\":\"#7a7e14\",\"navLimeGronnDarken60\":\"#66671e\",\"navLimeGronnDarken80\":\"#524f28\",\"navLysBlaLighten20\":\"#85d5f0\",\"navLysBlaLighten40\":\"#a3e0f4\",\"navLysBlaLighten60\":\"#c2eaf7\",\"navLysBlaLighten80\":\"#e0f5fb\",\"navLysBlaDarken20\":\"#5eaec7\",\"navLysBlaDarken40\":\"#5690a2\",\"navLysBlaDarken60\":\"#4e737c\",\"navLysBlaDarken80\":\"#465557\",\"navBlaLighten20\":\"#3385d1\",\"navBlaLighten40\":\"#66a4dc\",\"navBlaLighten60\":\"#99c2e8\",\"navBlaLighten80\":\"#cce1f3\",\"navBlaDarken20\":\"#0c5ea8\",\"navBlaDarken40\":\"#19548a\",\"navBlaDarken60\":\"#254b6d\",\"navBlaDarken80\":\"#32414f\",\"navDypBlaLighten20\":\"#337c9b\",\"navDypBlaLighten40\":\"#669db4\",\"navDypBlaLighten60\":\"#99bdcd\",\"navDypBlaLighten80\":\"#ccdee6\",\"navDypBlaDarken20\":\"#0c5472\",\"navDypBlaDarken40\":\"#194d62\",\"navDypBlaDarken60\":\"#254652\",\"navDypBlaDarken80\":\"#323f42\",\"navLillaLighten20\":\"#826ba1\",\"navLillaLighten40\":\"#a190b8\",\"navLillaLighten60\":\"#c1b5d0\",\"navLillaLighten80\":\"#e0dae7\",\"navLillaDarken20\":\"#5c4378\",\"navLillaDarken40\":\"#544066\",\"navLillaDarken60\":\"#4d3e55\",\"navLillaDarken80\":\"#453b43\",\"navRodLighten20\":\"#cf3333\",\"navRodLighten40\":\"#db6666\",\"navRodLighten60\":\"#e79999\",\"navRodLighten80\":\"#f3cccc\",\"navRodDarken20\":\"#a80b0a\",\"navRodDarken40\":\"#8e1614\",\"navRodDarken60\":\"#73221e\",\"navRodDarken80\":\"#592d28\",\"navOransjeLighten20\":\"#ffa733\",\"navOransjeLighten40\":\"#ffbd66\",\"navOransjeLighten60\":\"#ffd399\",\"navOransjeLighten80\":\"#ffe9cc\",\"navOransjeDarken20\":\"#d87f0a\",\"navOransjeDarken40\":\"#b26d14\",\"navOransjeDarken60\":\"#8b5c1e\",\"navOransjeDarken80\":\"#654a28\",\"orangeFocusLighten20\":\"#ffca85\",\"orangeFocusLighten40\":\"#ffd7a3\",\"orangeFocusLighten60\":\"#ffe5c2\",\"orangeFocusLighten80\":\"#fff2e0\",\"orangeFocusDarken20\":\"#d8a25c\",\"orangeFocusDarken40\":\"#b28851\",\"orangeFocusDarken60\":\"#8b6d47\",\"orangeFocusDarken80\":\"#65533c\",\"redErrorLighten20\":\"#c86151\",\"redErrorLighten40\":\"#d6897d\",\"redErrorLighten60\":\"#e3b0a8\",\"redErrorLighten80\":\"#f1d8d4\",\"redErrorDarken20\":\"#a13a28\",\"redErrorDarken40\":\"#88392b\",\"redErrorDarken60\":\"#70392d\",\"redErrorDarken80\":\"#573830\",\"screenSm\":\"768px\",\"screenSmMin\":\"768px\",\"screenTablet\":\"768px\",\"screenMd\":\"992px\",\"screenMdMin\":\"992px\",\"screenDesktop\":\"992px\",\"screenLg\":\"1200px\",\"screenLgMin\":\"1200px\",\"screenLgDesktop\":\"1200px\",\"screenXsMax\":\"767px\",\"screenSmMax\":\"991px\",\"screenMdMax\":\"1199px\",\"containerTablet\":\"736px\",\"containerSm\":\"736px\",\"containerDesktop\":\"956px\",\"containerMd\":\"956px\",\"containerLargeDesktop\":\"1156px\",\"containerLg\":\"1156px\",\"gridColumns\":\"12\",\"gridGutterWidth\":\"16px\",\"gridFloatBreakpoint\":\"768px\",\"gridFloatBreakpointMax\":\"767px\",\"paddingBaseVertical\":\"6px\",\"paddingBaseHorizontal\":\"12px\",\"paddingLargeVertical\":\"10px\",\"paddingLargeHorizontal\":\"16px\",\"paddingSmallVertical\":\"5px\",\"paddingSmallHorizontal\":\"10px\",\"paddingXsVertical\":\"1px\",\"paddingXsHorizontal\":\"5px\",\"lineHeightLarge\":\"1.3333333\",\"lineHeightSmall\":\"1.5\",\"borderRadiusSmall\":\"2px\",\"borderRadiusBase\":\"4px\",\"borderRadiusLarge\":\"6px\"};","export const appMessages = {\n    nb: {\n        'common.fieldvalidation.påkrevd': 'Påkrevd verdi',\n        'common.fieldvalidation.dato.ugyldigFormat': 'Ugyldig dato - format på dato skal være dd.mm.åååå',\n    },\n    nn: {\n        'common.fieldvalidation.påkrevd': 'Påkrevd verdi',\n        'common.fieldvalidation.dato.ugyldigFormat': 'Ugyldig dato - format på dato skal være dd.mm.åååå',\n    },\n};\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { appMessages } from './messages';\n\nexport interface IntlProviderProps {\n    locale: string;\n    children: React.ReactNode;\n    onError?: (error: any) => void;\n}\n\nconst AppIntlProvider = ({ locale, onError, children }: IntlProviderProps) => {\n    const messages = locale === 'nb' ? appMessages.nb : appMessages.nn;\n    return (\n        <IntlProvider locale={locale} messages={messages} onError={onError}>\n            {children}\n        </IntlProvider>\n    );\n};\n\nexport default AppIntlProvider;\n","import React from 'react';\n\nfunction NAVLogo(props) {\n    return (\n        <svg className=\"prefix__navLogo\" width={90} viewBox=\"0 0 269 169\" {...props}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <path\n                    fill=\"#C30000\"\n                    d=\"M125.31 168.942c-46.642 0-84.46-37.817-84.46-84.465C40.85 37.824 78.667 0 125.31 0c46.657 0 84.48 37.824 84.48 84.477 0 46.648-37.823 84.465-84.48 84.465zM0 121.359l17.265-42.73h16.589l-17.243 42.73zm213.044 0l17.044-42.73h9.044l-17.043 42.73zM246.564 121.359l17.04-42.73h4.803l-17.043 42.731z\"\n                />\n                <path\n                    fill=\"#FEFEFE\"\n                    d=\"M197.36 78.63h-15.016s-1.035 0-1.4.914l-8.31 25.439-8.304-25.44c-.366-.913-1.407-.913-1.407-.913h-28.872c-.625 0-1.149.522-1.149 1.143v8.639c0-6.853-7.292-9.782-11.562-9.782-9.562 0-15.963 6.298-17.956 15.873-.108-6.352-.636-8.628-2.347-10.96-.786-1.141-1.922-2.101-3.159-2.895-2.547-1.492-4.834-2.018-9.749-2.018h-5.77s-1.044 0-1.412.914l-5.25 13.013V79.773c0-.621-.52-1.143-1.145-1.143H61.198s-1.03 0-1.406.914l-5.459 13.53s-.545 1.354.701 1.354h5.133v25.784c0 .64.504 1.147 1.147 1.147h13.238c.624 0 1.144-.507 1.144-1.147V94.428h5.16c2.961 0 3.588.08 4.74.618.694.262 1.32.792 1.66 1.403.698 1.314.873 2.892.873 7.545v16.218c0 .64.514 1.147 1.15 1.147h12.687s1.434 0 2.001-1.416l2.812-6.95c3.74 5.237 9.893 8.366 17.541 8.366h1.671s1.443 0 2.014-1.416l4.897-12.128v12.397c0 .64.524 1.147 1.15 1.147h12.951s1.43 0 2.003-1.416c0 0 5.18-12.861 5.2-12.958h.008c.2-1.07-1.153-1.07-1.153-1.07h-4.623V83.847l14.545 36.096c.568 1.416 2 1.416 2 1.416h15.301s1.44 0 2.008-1.416l16.125-39.93c.558-1.383-1.057-1.383-1.057-1.383zm-64.458 27.285h-8.7c-3.463 0-6.28-2.804-6.28-6.271 0-3.461 2.817-6.283 6.28-6.283h2.433c3.454 0 6.267 2.822 6.267 6.283v6.27z\"\n                />\n            </g>\n        </svg>\n    );\n}\n\nexport default NAVLogo;\n","const fnrvalidator = require('@navikt/fnrvalidator');\n\nexport enum FødselsnummerValidationErrorReason {\n    MustConsistOf11Digits = 'fnr must consist of 11 digits',\n    InvalidDate = 'invalid date',\n    ChecksumsDontMatch = \"checksums don't match\",\n}\n\ninterface FnrValidationResult {\n    reasons?: FødselsnummerValidationErrorReason[];\n    status: 'valid' | 'invalid';\n}\n\nexport const fødselsnummerIsValid = (value: string): [boolean, FødselsnummerValidationErrorReason[]] => {\n    const { status, reasons }: FnrValidationResult = fnrvalidator.fnr(value);\n    if (status === 'valid') {\n        return [true, []];\n    } else {\n        return [false, reasons!];\n    }\n};\n","import classNames from 'classnames';\n\nconst bemUtils = (cls: string) => ({\n    block: cls,\n    element: (e?: string, m?: string) => `${cls}__${e}${m ? ` ${cls}__${e}--${m}` : ''}`,\n    modifier: (m?: string) => `${cls}--${m}`,\n    modifierConditional: (m: string | undefined, condition: boolean | undefined) =>\n        condition === true && m !== undefined ? `${cls}--${m}` : undefined,\n    child: (c: string) => bemUtils(bemUtils(cls).element(c)),\n    classNames\n});\n\nexport default bemUtils;\n","import React from 'react';\n\nimport bemHelper from '../../utils/bemUtils';\n\nimport './box.less';\n\ntype BoxMargin = 's' | 'm' | 'l' | 'xl' | 'xxl' | 'xxxl' | 'none';\n\ninterface BoxProps {\n    margin?: BoxMargin;\n    padBottom?: BoxMargin;\n    textAlignCenter?: boolean;\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst bem = bemHelper('box');\n\nconst Box = ({ margin, padBottom, className, textAlignCenter, children }: BoxProps) => {\n    const classNames = bem.classNames(\n        bem.block,\n        bem.modifierConditional(margin, margin !== undefined),\n        bem.modifierConditional(`bottom-${padBottom}`, padBottom !== undefined),\n        {\n            [bem.modifier('textAlignCenter')]: textAlignCenter,\n            [`${className}`]: className !== undefined,\n        }\n    );\n    return <div className={classNames}>{children}</div>;\n};\n\nexport default Box;\n","import React from 'react';\nimport { Ingress, Undertittel } from 'nav-frontend-typografi';\nimport Box from '../box/Box';\n\ninterface Props {\n    title: string;\n    children: React.ReactNode;\n}\n\nconst PageIntro = ({ title, children }: Props) => (\n    <>\n        <Box margin=\"m\">\n            <Box>\n                <Undertittel>{title}</Undertittel>\n            </Box>\n            {children && (\n                <Box padBottom=\"xl\">\n                    <Ingress tag=\"div\">{children}</Ingress>\n                </Box>\n            )}\n        </Box>\n    </>\n);\n\nexport default PageIntro;\n","import React from 'react';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst Question = (props: Props) => <div style={{ marginBottom: '2rem' }}>{props.children}</div>;\n\nexport default Question;\n","import React from 'react';\nimport bemUtils from '../../utils/bemUtils';\nimport './tiles.less';\n\nconst bem = bemUtils('tiles');\n\nconst Tiles: React.StatelessComponent<{ columns?: 1 | 2 | 3 | 'flex' }> = ({ columns = 3, children }) => (\n    <div className={bem.classNames(bem.block, bem.modifier(`columns-${columns}`))}>\n        {React.Children.map(children, (child) => (\n            <div className={bem.element('tile')}>{child}</div>\n        ))}\n    </div>\n);\n\nexport default Tiles;\n","import { IntlShape } from 'react-intl';\nimport { FieldValidationResultValues, IntlFieldValidationError } from './types';\n\nexport const isIntlFieldValidationErrorType = (error: any): error is IntlFieldValidationError =>\n    typeof error === 'object' && error.key !== undefined;\n\nexport const renderIntlFieldValidationValues = (\n    intl: IntlShape,\n    values?: FieldValidationResultValues\n): { [key: string]: string } | undefined => {\n    if (values === undefined) {\n        return undefined;\n    }\n    const parsedValues: { [key: string]: string } = {};\n    Object.keys(values).forEach((key) => {\n        const valueOrFunc = values[key];\n        if (valueOrFunc !== undefined) {\n            parsedValues[key] = typeof valueOrFunc === 'function' ? valueOrFunc(intl) : `${valueOrFunc}`;\n        }\n    });\n    return parsedValues;\n};\n\nexport const renderIntlFieldValidationError = (intl: IntlShape, error: IntlFieldValidationError): string => {\n    return intl.formatMessage({ id: error.key }, renderIntlFieldValidationValues(intl, error.values));\n};\n","import { YesOrNo } from '../../typed-formik-form';\nimport { FieldValidationResult } from '../modules/validation/types';\nimport { erGyldigNorskOrgnummer } from './erGyldigNorskOrgnummer';\nimport { fødselsnummerIsValid, FødselsnummerValidationErrorReason } from './fødselsnummerValidator';\nimport { hasValue } from './hasValue';\n\nexport declare type FormikValFunc = (value: any) => any;\n\nexport type FieldValidationArray = (validations: FormikValFunc[]) => (value: any) => FieldValidationResult;\n\nexport enum FieldValidationErrors {\n    'påkrevd' = 'common.fieldvalidation.påkrevd',\n    'fødselsnummer_11siffer' = 'common.fieldvalidation.fødselsnummer.11siffer',\n    'fødselsnummer_ugyldig' = 'common.fieldvalidation.fødselsnummer.ugyldig',\n    'orgnum_ugyldig' = 'common.fieldvalidation.orgnum.ugyldig',\n    'dato_ugyldig' = 'common.fieldvalidation.dato.ugyldig',\n}\nexport const createFieldValidationError = <T extends string>(\n    key: T | undefined,\n    values?: any\n): FieldValidationResult => {\n    return key\n        ? {\n              key,\n              values,\n          }\n        : undefined;\n};\nexport const fieldIsRequiredError = () => createFieldValidationError(FieldValidationErrors.påkrevd);\n\nexport const validateFødselsnummer = (v: string): FieldValidationResult => {\n    const [isValid, reasons] = fødselsnummerIsValid(v);\n    if (!isValid) {\n        if (reasons.includes(FødselsnummerValidationErrorReason.MustConsistOf11Digits)) {\n            return createFieldValidationError(FieldValidationErrors.fødselsnummer_11siffer);\n        } else {\n            return createFieldValidationError(FieldValidationErrors.fødselsnummer_ugyldig);\n        }\n    }\n};\n\nexport const validateYesOrNoIsAnswered = (answer: YesOrNo): FieldValidationResult => {\n    if (answer === YesOrNo.UNANSWERED || answer === undefined) {\n        return fieldIsRequiredError();\n    }\n    return undefined;\n};\n\nexport const validateRequiredField = (value: any): FieldValidationResult => {\n    if (!hasValue(value)) {\n        return fieldIsRequiredError();\n    }\n    return undefined;\n};\n\nexport const validateTruthyCheckbox = (value: any): FieldValidationResult => {\n    if (value !== true) {\n        return fieldIsRequiredError();\n    }\n    return undefined;\n};\n\nexport const validateRequiredList = (value: any): FieldValidationResult => {\n    if (!hasValue(value) || value?.length === 0) {\n        return fieldIsRequiredError();\n    }\n    return undefined;\n};\n\nexport const validateRequiredSelect = (value: any): FieldValidationResult => {\n    if (!hasValue(value)) {\n        return fieldIsRequiredError();\n    }\n    return undefined;\n};\n\nexport const validateOrgNumber = (orgnum: string, isNorwegian: boolean): FieldValidationResult => {\n    if (isNorwegian) {\n        if (!erGyldigNorskOrgnummer(orgnum)) {\n            return { key: FieldValidationErrors.orgnum_ugyldig };\n        }\n        return undefined;\n    }\n    return validateRequiredField(orgnum);\n};\n\nexport const validateAll: FieldValidationArray = (validations: FormikValFunc[]) => (\n    value: any\n): FieldValidationResult => {\n    let result: FieldValidationResult;\n    validations.some((validate) => {\n        const r = validate(value);\n        if (r) {\n            result = r;\n            return true;\n        }\n        return false;\n    });\n    return result;\n};\n","export const hasValue = (v: any) => v !== '' && v !== undefined && v !== null;\n","export interface Ferieuttak {\n    id?: string;\n    fom: Date;\n    tom: Date;\n    land: Ferieland[];\n}\n\nexport const isFerieuttak = (ferieuttak: Partial<Ferieuttak>): ferieuttak is Ferieuttak => {\n    return ferieuttak.fom !== undefined && ferieuttak.tom !== undefined && ferieuttak.land !== undefined;\n};\n\nexport enum Ferieland {\n    'Norge' = 'norge',\n    'Sverige' = 'sverige',\n    'Danmark' = 'danmark',\n}\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport Box from '@navikt/sif-common-core/lib/components/box/Box';\nimport { commonFieldErrorRenderer } from '@navikt/sif-common-core/lib/utils/commonFieldErrorRenderer';\nimport dateRangeValidation from '@navikt/sif-common-core/lib/validation/dateRangeValidation';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { getTypedFormComponents, ISOStringToDate } from '../../../../typed-formik-form';\nimport { validateRequiredList } from '../../../validation/fieldValidations';\nimport { Ferieland, Ferieuttak, isFerieuttak } from './types';\n\nexport interface FerieuttakFormLabels {\n    title: string;\n    fromDate: string;\n    toDate: string;\n    intervalTitle: string;\n    okButton: string;\n    cancelButton: string;\n}\n\ninterface Props {\n    minDate: Date;\n    maxDate: Date;\n    ferieuttak?: Partial<Ferieuttak>;\n    alleFerieuttak?: Ferieuttak[];\n    labels?: Partial<FerieuttakFormLabels>;\n    onSubmit: (values: Ferieuttak) => void;\n    onCancel: () => void;\n}\n\nconst defaultLabels: FerieuttakFormLabels = {\n    title: 'Registrer uttak av ferie',\n    fromDate: 'Fra og med',\n    toDate: 'Til og med',\n    intervalTitle: 'Velg tidsrom',\n    okButton: 'Ok',\n    cancelButton: 'Avbryt',\n};\n\nexport enum FerieuttakFormFields {\n    tom = 'tom',\n    fom = 'fom',\n    land = 'land',\n}\n\ntype FormValues = Partial<Ferieuttak>;\n\nconst Form = getTypedFormComponents<FerieuttakFormFields, FormValues>();\n\nconst FerieuttakForm = ({\n    maxDate,\n    minDate,\n    labels,\n    ferieuttak = { fom: undefined, tom: undefined, land: [] },\n    alleFerieuttak = [],\n    onSubmit,\n    onCancel,\n}: Props) => {\n    const intl = useIntl();\n    const onFormikSubmit = (formValues: FormValues) => {\n        if (isFerieuttak(formValues)) {\n            onSubmit(formValues);\n        } else {\n            throw new Error('FerieuttakForm: Formvalues is not a valid Ferieuttak on submit.');\n        }\n    };\n\n    const formLabels: FerieuttakFormLabels = { ...defaultLabels, ...labels };\n\n    return (\n        <>\n            <Form.FormikWrapper\n                initialValues={ferieuttak}\n                onSubmit={onFormikSubmit}\n                renderForm={(formik) => (\n                    <Form.Form\n                        onCancel={onCancel}\n                        fieldErrorRenderer={(error) => commonFieldErrorRenderer(intl, error)}>\n                        <Box padBottom=\"l\">\n                            <Systemtittel tag=\"h1\">{formLabels.title}</Systemtittel>\n                        </Box>\n                        <Form.CheckboxPanelGroup\n                            name={FerieuttakFormFields.land}\n                            legend={'Hvilket land'}\n                            checkboxes={[\n                                {\n                                    value: Ferieland.Norge,\n                                    label: 'Norge',\n                                },\n                                {\n                                    value: Ferieland.Sverige,\n                                    label: 'Sverige',\n                                },\n                                {\n                                    value: Ferieland.Danmark,\n                                    label: 'Danmark',\n                                },\n                            ]}\n                            validate={validateRequiredList}\n                        />\n                        <Form.DateIntervalPicker\n                            legend={formLabels.intervalTitle}\n                            fromDatepickerProps={{\n                                label: formLabels.fromDate,\n                                name: FerieuttakFormFields.fom,\n                                fullscreenOverlay: true,\n                                minDate,\n                                maxDate: maxDate || formik.values.tom,\n                                disabledDateRanges: alleFerieuttak\n                                    .filter((f) => (ferieuttak ? ferieuttak.id !== f.id : true))\n                                    .map((f) => ({ from: f.fom, to: f.tom })),\n                                validate: (value) =>\n                                    dateRangeValidation.validateFromDate(\n                                        ISOStringToDate(value),\n                                        minDate,\n                                        maxDate,\n                                        formik.values.tom\n                                    ),\n                                onChange: () => {\n                                    setTimeout(() => {\n                                        formik.validateField(FerieuttakFormFields.tom);\n                                    });\n                                },\n                            }}\n                            toDatepickerProps={{\n                                label: formLabels.toDate,\n                                name: FerieuttakFormFields.tom,\n                                fullscreenOverlay: true,\n                                minDate: minDate || formik.values.fom,\n                                maxDate,\n                                validate: (value) =>\n                                    dateRangeValidation.validateToDate(\n                                        ISOStringToDate(value),\n                                        minDate,\n                                        maxDate,\n                                        formik.values.fom\n                                    ),\n                                onChange: () => {\n                                    setTimeout(() => {\n                                        formik.validateField(FerieuttakFormFields.fom);\n                                    });\n                                },\n                            }}\n                        />\n                    </Form.Form>\n                )}\n            />\n        </>\n    );\n};\n\nexport default FerieuttakForm;\n","import React from 'react';\nimport ActionLink from '@navikt/sif-common-core/lib/components/action-link/ActionLink';\nimport ItemList from '@navikt/sif-common-core/lib/components/item-list/ItemList';\nimport { prettifyDateExtended } from '@navikt/sif-common-core/lib/utils/dateUtils';\nimport { Ferieuttak } from './types';\n\ninterface Props {\n    ferieuttak: Ferieuttak[];\n    onEdit?: (opphold: Ferieuttak) => void;\n    onDelete?: (opphold: Ferieuttak) => void;\n}\n\nconst FerieuttakList = ({ ferieuttak = [], onDelete, onEdit }: Props) => {\n    const getDateTitleString = (uttak: Ferieuttak) =>\n        `${prettifyDateExtended(uttak.fom)} - ${prettifyDateExtended(uttak.tom)}`;\n\n    const renderFerieuttakLabel = (uttak: Ferieuttak): React.ReactNode => {\n        const title = getDateTitleString(uttak);\n        return (\n            <>\n                {onEdit && <ActionLink onClick={() => onEdit(uttak)}>{title}</ActionLink>}\n                {!onEdit && <span>{title}</span>}\n            </>\n        );\n    };\n\n    return (\n        <ItemList<Ferieuttak>\n            getItemId={(uttak) => uttak.id}\n            getItemTitle={(uttak) => getDateTitleString(uttak)}\n            onDelete={onDelete}\n            onEdit={onEdit}\n            labelRenderer={renderFerieuttakLabel}\n            items={ferieuttak.filter((uttak) => uttak.id !== undefined)}\n        />\n    );\n};\n\nexport default FerieuttakList;\n","import React from 'react';\nimport { sortItemsByFom } from '@navikt/sif-common-core/lib/utils/dateUtils';\nimport { FormikModalFormAndList, FormikValidateFunction, ModalFormAndListLabels } from '../../../../typed-formik-form';\nimport FerieuttakForm from './FerieuttakForm';\nimport FerieuttakList from './FerieuttakList';\nimport { Ferieuttak } from './types';\n\ninterface Props<FieldNames> {\n    name: FieldNames;\n    validate?: FormikValidateFunction;\n    minDate: Date;\n    maxDate: Date;\n    labels: ModalFormAndListLabels;\n}\n\nfunction FerieuttakListAndDialog<FieldNames>({ name, minDate, maxDate, validate, labels }: Props<FieldNames>) {\n    return (\n        <>\n            <FormikModalFormAndList<FieldNames, Ferieuttak>\n                name={name}\n                labels={labels}\n                dialogWidth=\"narrow\"\n                validate={validate}\n                sortFunc={sortItemsByFom}\n                formRenderer={({ onSubmit, onCancel, item, allItems }) => (\n                    <FerieuttakForm\n                        ferieuttak={item}\n                        alleFerieuttak={allItems}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        onSubmit={onSubmit}\n                        onCancel={onCancel}\n                    />\n                )}\n                listRenderer={({ items, onEdit, onDelete }) => (\n                    <FerieuttakList ferieuttak={items} onEdit={onEdit} onDelete={onDelete} />\n                )}\n            />\n        </>\n    );\n}\n\nexport default FerieuttakListAndDialog;\n","import { Time, YesOrNo } from '../../../typed-formik-form/types';\nimport { Ferieuttak } from './ferieuttak-example';\n\nexport enum FormFields {\n    'nameGroup' = 'nameGroup',\n    'firstname' = 'firstname',\n    'lastname' = 'lastname',\n    'birthdate' = 'birthdate',\n    'birthCountry' = 'birthCountry',\n    'hasKids' = 'hasKids',\n    'numberOfKids' = 'numberOfKids',\n    'hasBeenAbroadWithKids' = 'hasBeenAbroadWithKids',\n    'countries' = 'countries',\n    'time' = 'time',\n    'daterange_from' = 'daterange_from',\n    'daterange_to' = 'daterange_to',\n    'files' = 'files',\n    'ferieuttak' = 'ferieuttak',\n}\n\nexport interface CompletedFormValues {\n    [FormFields.nameGroup]: string;\n    [FormFields.firstname]: string;\n    [FormFields.lastname]?: string;\n    [FormFields.birthdate]: string;\n    [FormFields.birthCountry]: string;\n    [FormFields.hasKids]: YesOrNo;\n    [FormFields.numberOfKids]?: number;\n    [FormFields.hasBeenAbroadWithKids]?: YesOrNo;\n    [FormFields.countries]: string[];\n    [FormFields.time]?: Time;\n    [FormFields.daterange_from]?: string;\n    [FormFields.daterange_to]?: string;\n    [FormFields.files]?: any;\n    [FormFields.ferieuttak]?: Ferieuttak[];\n}\nexport type FormValues = Partial<CompletedFormValues>;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useFormikContext } from 'formik';\nimport moment from 'moment';\nimport { Knapp } from 'nav-frontend-knapper';\nimport { PopoverOrientering } from 'nav-frontend-popover';\nimport {\n    FormikDateIntervalPicker,\n    FormikFileInput,\n    FormikInput,\n    FormikInputGroup,\n    ISOStringToDate,\n} from '../../../../typed-formik-form';\nimport FormikDateRangePicker from '../../../../typed-formik-form/components/formik-date-range-picker/FormikDateRangePicker';\nimport FormikTimeInput from '../../../../typed-formik-form/components/formik-time-input/FormikTimeInput';\nimport { getTypedFormComponents } from '../../../../typed-formik-form/components/getTypedFormComponents';\nimport Question from '../../../components/question/Question';\nimport Tiles from '../../../components/tiles/Tiles';\nimport {\n    isIntlFieldValidationErrorType,\n    renderIntlFieldValidationError,\n} from '../../../modules/validation/fieldValidationRenderUtils';\nimport {\n    validateRequiredField,\n    validateRequiredList,\n    validateYesOrNoIsAnswered,\n} from '../../../validation/fieldValidations';\nimport FerieuttakListAndDialog from '../ferieuttak-example/FerieuttakListAndDialog';\nimport { FormFields, FormValues } from '../types';\n\nconst Form = getTypedFormComponents<FormFields, FormValues>();\nconst fullForm = true;\n\nconst TypedFormExample = () => {\n    const intl = useIntl();\n    const { values } = useFormikContext<FormValues>();\n    const { setFieldValue } = useFormikContext<FormValues>();\n    return (\n        <Form.Form\n            submitButtonLabel=\"Ok\"\n            includeValidationSummary={true}\n            fieldErrorRenderer={(error) => {\n                if (isIntlFieldValidationErrorType(error)) {\n                    return renderIntlFieldValidationError(intl, error);\n                }\n                return error;\n            }}>\n            <h3>Noen skjemaelementer</h3>\n            {fullForm ? (\n                <>\n                    <Question>\n                        <Form.DatePicker\n                            info={'sdfsdf'}\n                            name={FormFields.birthdate}\n                            label=\"Fødselsdato\"\n                            validate={validateRequiredField}\n                        />\n                    </Question>\n                    <Question>\n                        <Form.CountrySelect name={FormFields.birthCountry} label=\"Fødselsland\" useAlpha3Code={true} />\n                    </Question>\n                    <Question>\n                        <Form.InputGroup\n                            name={FormFields.birthCountry}\n                            legend=\"Dette er legend\"\n                            info=\"Hey\"\n                            validate={validateRequiredField}>\n                            <FormikInput name=\"sdf\" label=\"sdfsdf\" />\n                            sdf\n                        </Form.InputGroup>\n                    </Question>\n                    <Question>\n                        <Tiles columns={2}>\n                            <Form.Input name={FormFields.firstname} label=\"Fornavn\" validate={validateRequiredField} />\n                            <Form.Input name={FormFields.lastname} label=\"Etternavn\" validate={validateRequiredField} />\n                        </Tiles>\n                    </Question>\n                    <Question>\n                        <Form.YesOrNoQuestion\n                            legend={'sdfjjsdfj'}\n                            info={'sdfsdf'}\n                            infoPlassering={PopoverOrientering.Under}\n                            name={FormFields.hasKids}\n                            validate={validateYesOrNoIsAnswered}\n                        />\n                    </Question>\n                    <Question>\n                        <div style={{ display: 'flex', flex: 'flex-start' }}>\n                            <FormikTimeInput name={FormFields.time} label=\"Tidspunkt\" />\n                        </div>\n                    </Question>\n                    <FormikInputGroup name={FormFields.nameGroup} legend=\"Test me\" validate={validateRequiredField}>\n                        Content in group\n                    </FormikInputGroup>\n                    <Question>\n                        <FormikDateIntervalPicker\n                            legend=\"Tidsrom\"\n                            fromDatepickerProps={{\n                                name: FormFields.daterange_from,\n                                label: 'Fra',\n                                maxDate: ISOStringToDate(values.daterange_to),\n                                validate: validateRequiredField,\n                            }}\n                            toDatepickerProps={{\n                                name: FormFields.daterange_to,\n                                label: 'Til',\n                                minDate: ISOStringToDate(values.daterange_from),\n                                validate: validateRequiredField,\n                            }}\n                        />\n                    </Question>\n                    <Question>\n                        <FormikDateRangePicker\n                            legend=\"Tidsrom\"\n                            disableWeekend={true}\n                            minDate={moment().subtract(4, 'months').toDate()}\n                            maxDate={moment().add(4, 'months').toDate()}\n                            fromInputProps={{\n                                name: FormFields.daterange_from,\n                                label: 'Fra',\n                            }}\n                            toInputProps={{\n                                name: FormFields.daterange_to,\n                                label: 'Til',\n                            }}\n                        />\n                    </Question>\n                    <Question>\n                        <FerieuttakListAndDialog\n                            name={FormFields.ferieuttak}\n                            labels={{\n                                addLabel: 'Legg til',\n                                modalTitle: 'Ferieuttak',\n                                listTitle: 'Ferieuttak',\n                            }}\n                            minDate={moment().subtract(1, 'year').toDate()}\n                            maxDate={moment().add(1, 'year').toDate()}\n                            validate={validateRequiredList}\n                        />\n                    </Question>\n                    <Question>\n                        <FormikFileInput\n                            name={FormFields.files}\n                            label=\"Legg til filer\"\n                            acceptedExtensions={'tsx'}\n                            onFilesSelect={() => null}\n                        />\n                    </Question>\n                </>\n            ) : (\n                <>\n                    <Question>\n                        <Form.DatePicker name={FormFields.birthdate} label=\"Fødselsdato\" />\n                    </Question>\n                    <Knapp\n                        htmlType=\"button\"\n                        onClick={() => {\n                            setFieldValue(FormFields.birthdate, '2000-10-2');\n                        }}>\n                        Sett ugyldig dato\n                    </Knapp>\n                    <FormikInputGroup name={FormFields.nameGroup} legend=\"Test me\" validate={validateRequiredField}>\n                        Content in group\n                    </FormikInputGroup>\n                </>\n            )}\n        </Form.Form>\n    );\n};\n\nexport default TypedFormExample;\n","import React from 'react';\nimport moment from 'moment';\nimport Panel from 'nav-frontend-paneler';\nimport 'nav-frontend-tabs-style';\nimport TypedFormikWrapper from '../../../typed-formik-form/components/typed-formik-wrapper/TypedFormikWrapper';\nimport PageIntro from '../../components/page-intro/PageIntro';\nimport TypedFormExample from './typed-form-example/TypedFormExample';\nimport { FormValues } from './types';\n\nconst initialValues: FormValues = {\n    ferieuttak: [\n        {\n            id: '1',\n            fom: new Date(),\n            tom: moment().add(1, 'month').toDate(),\n            land: [],\n        },\n        {\n            id: '2',\n            fom: moment().add(1, 'month').toDate(),\n            tom: moment().add(2, 'month').toDate(),\n            land: [],\n        },\n    ],\n};\n\nconst FormikExample = () => {\n    return (\n        <>\n            <PageIntro title=\"@navikt/sif-common-formik\">\n                <h2>TypedFormExample</h2>\n                Siden setter opp TypedFormikWrapper og setter type med generics. Se <code>TypedFormExample</code>. En\n                kan også bruke <code>getTypedFormComponents</code>-util for å få ut alle skjemakomponentene typed\n                direkte. Se <code>TypedFormExample</code>.\n            </PageIntro>\n\n            <TypedFormikWrapper<FormValues>\n                initialValues={initialValues}\n                onSubmit={(values) => {\n                    console.log('FormikWrapperSubmit', values);\n                }}\n                renderForm={() => (\n                    <Panel>\n                        <TypedFormExample />\n                    </Panel>\n                )}\n            />\n        </>\n    );\n};\n\nexport default FormikExample;\n","import React from 'react';\nimport { Ingress } from 'nav-frontend-typografi';\nimport PageIntro from './components/page-intro/PageIntro';\n\nconst Intro = () => (\n    <>\n        <PageIntro title=\"@navikt/sif-common-formik\">\n            <h2>Typed formik wrapper for nav-frontend-skjema</h2>\n            <Ingress>\n                Sett av skjema-komponenter laget for team brukerdialog i sykdom-i-familien. Komponentene gjør det\n                enklere og raskere å sette opp skjemaløsninger hvor en bruker typescript, formik of nav-frontend-skjema,\n                og som sørger for at oppførsel og utéendet blir likt på tvers av brukerdialogene.\n            </Ingress>\n            <h3>Kort hvordan det virker</h3>\n            <ol>\n                <li>\n                    Definer alle felter i skjemaet som enums - <code>FieldNames</code>\n                </li>\n                <li>\n                    Definer et interface for skjemaet: <code>FormValues</code>\n                </li>\n            </ol>\n            <p> ... se kode for konkret eksempel</p>\n        </PageIntro>\n    </>\n);\n\nexport default Intro;\n","import React from 'react';\nimport FormikExample from '../examples/formik-example/FormikExample';\nimport Intro from '../Intro';\n\nexport interface RouteConfig {\n    path: string;\n    title: string;\n    renderContent: () => React.ReactNode;\n}\n\nexport const routes: RouteConfig[] = [\n    {\n        path: 'frontpage',\n        title: 'Forside',\n        renderContent: () => <Intro />\n    },\n    {\n        path: 'formik-example',\n        title: 'TypedFormExample',\n        renderContent: () => <FormikExample />\n    }\n];\n\nexport const getRouteConfig = (pathname: string): RouteConfig | undefined => {\n    return routes.find((f) => isActiveRoute(f.path, pathname));\n};\n\nexport const isActiveRoute = (path: string, pathname: string): boolean => {\n    return pathname.indexOf(path) >= 0;\n};\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport 'nav-frontend-lenker-style';\nimport { isActiveRoute, routes } from '../../config/routeConfig';\nimport bemUtils from '../../utils/bemUtils';\n\nconst lenkeBem = bemUtils('lenke');\n\nconst LeftMenu = () => {\n    const {\n        location: { pathname },\n    } = useHistory();\n    return (\n        <div className=\"leftMenu\">\n            {routes.map((route) => (\n                <Link\n                    key={route.path}\n                    to={route.path}\n                    className={lenkeBem.classNames(\n                        lenkeBem.block,\n                        lenkeBem.modifierConditional('active', isActiveRoute(route.path, pathname))\n                    )}>\n                    {route.title}\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default LeftMenu;\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport LeftMenu from './components/left-menu/LeftMenu';\nimport { getRouteConfig } from './config/routeConfig';\nimport Intro from './Intro';\n\ntype Props = RouteComponentProps;\n\nconst DevContent = ({ history }: Props) => {\n    const {\n        location: { pathname },\n    } = history;\n    const routeConfig = getRouteConfig(pathname);\n    return (\n        <>\n            <aside className=\"asideContent\">\n                <LeftMenu />\n            </aside>\n            <article style={{ maxWidth: '1000px' }} className=\"mainContent\">\n                {routeConfig ? routeConfig.renderContent() : <Intro />}\n            </article>\n        </>\n    );\n};\n\nexport default withRouter(DevContent);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport NAVLogo from './components/svg/NAVLogo';\nimport DevContent from './DevContent';\nimport './styles/dev.less';\n\nconst DevPage = () => {\n    return (\n        <main className=\"devPage\">\n            <header className=\"header\">\n                <span className=\"navLogo\">\n                    <NAVLogo />\n                </span>\n                <span className=\"header__title\">\n                    <Systemtittel>sif-common-formik</Systemtittel>\n                </span>\n            </header>\n            <div className=\"contentWrapper\">\n                <BrowserRouter>\n                    <DevContent />\n                </BrowserRouter>\n            </div>\n        </main>\n    );\n};\n\nexport default DevPage;\n","import React from 'react';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/nb';\nimport '@formatjs/intl-pluralrules/locale-data/nn';\nimport '@formatjs/intl-pluralrules/polyfill';\nimport 'nav-frontend-skjema-style';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport AppIntlProvider from './dev/components/app-intl-provider/AppIntlProvider';\nimport DevPage from './dev/DevPage';\nimport './dev/styles/globalStyles.less';\n\nconst App: React.FC = () => {\n    return (\n        <Normaltekst tag=\"div\">\n            <AppIntlProvider locale={'nb'}>\n                <DevPage />\n            </AppIntlProvider>\n        </Normaltekst>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport App from './App';\n\nModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { SkjemaGruppe, SkjemaGruppeProps } from 'nav-frontend-skjema';\nimport LabelWithInfo from '../label-with-info/LabelWithInfo';\n\ninterface Props extends SkjemaGruppeProps {\n    info?: React.ReactNode;\n}\n\nconst SkjemagruppeQuestion = ({ legend, feil, info, tag, children, className }: Props) => (\n    <SkjemaGruppe\n        className={`${className ? className : ''} singleInputWrapper`}\n        tag={tag ? tag : legend ? 'fieldset' : 'div'}\n        feil={feil}\n        legend={legend ? <LabelWithInfo info={info}>{legend}</LabelWithInfo> : undefined}>\n        {children}\n    </SkjemaGruppe>\n);\n\nexport default SkjemagruppeQuestion;\n","import { isISODateString } from 'nav-datovelger';\nimport { IntlShape } from 'react-intl';\n\n/**\n * Midlertidig plassering av kode\n * Todo - flytte all validation til sif-common-soknad\n *\n * */\n\ntype valueFunction = (intl: IntlShape) => string;\n\ninterface FieldValidationResultValues {\n    [key: string]: string | number | Date | valueFunction | undefined;\n}\n\ninterface IntlFieldValidationError {\n    key: string;\n    values?: FieldValidationResultValues;\n}\n\ntype FieldValidationResult = IntlFieldValidationError | undefined | void;\n\ndeclare type FormikValidateFunction = (value: any) => any;\n\ntype FieldValidationArray = (validations: FormikValidateFunction[]) => (value: any) => FieldValidationResult;\n\nexport const validateAll: FieldValidationArray = (validations: FormikValidateFunction[]) => (\n    value: any\n): FieldValidationResult => {\n    let result: FieldValidationResult;\n    validations.some((validate) => {\n        const r = validate(value);\n        if (r) {\n            result = r;\n            return true;\n        }\n        return false;\n    });\n    return result;\n};\n\nexport const validateDateString = (dateString = '', errorIntlKey: string): FieldValidationResult => {\n    if (dateString !== undefined && dateString !== '' && isISODateString(dateString) === false) {\n        return {\n            key: errorIntlKey,\n            values: { dateString },\n        };\n    }\n    return undefined;\n};\n","import React from 'react';\nimport { DayPickerProps } from 'react-day-picker';\nimport { Field, FieldProps } from 'formik';\nimport { CalendarPlacement, Datepicker, DatepickerChange } from 'nav-datovelger';\nimport useMedia from 'use-media';\nimport { guid } from 'nav-frontend-js-utils';\nimport { Label } from 'nav-frontend-skjema';\nimport { DateRange, FormikValidateFunction, NavFrontendSkjemaFeil, TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport SkjemagruppeQuestion from '../helpers/skjemagruppe-question/SkjemagruppeQuestion';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport datepickerUtils from './datepickerUtils';\nimport { validateAll, validateDateString } from './validateFormikDatepickerDate';\nimport './datepicker.less';\n\nexport interface DatepickerLimitiations {\n    minDate?: Date;\n    maxDate?: Date;\n    disabledDateRanges?: DateRange[];\n    disableWeekend?: boolean;\n}\n\nexport interface DatePickerBaseProps<FieldName> {\n    name: FieldName;\n    label: string;\n    disabled?: boolean;\n    feil?: NavFrontendSkjemaFeil;\n    inputTitle?: string;\n    dayPickerProps?: DayPickerProps;\n    invalidFormatErrorKey?: string;\n    disableFormatValidation?: boolean;\n    onChange?: (date: string) => void;\n    validate?: FormikValidateFunction<string | undefined>;\n}\nexport interface DatePickerPresentationProps {\n    showYearSelector?: boolean;\n    fullscreenOverlay?: boolean;\n    fullScreenOnMobile?: boolean;\n}\ninterface OwnProps<FieldName> extends DatePickerBaseProps<FieldName> {\n    id?: string;\n    description?: React.ReactNode;\n}\n\nexport type FormikDatepickerProps<FieldName> = OwnProps<FieldName> &\n    Omit<TypedFormInputCommonProps, 'validate'> &\n    DatePickerPresentationProps &\n    DatepickerLimitiations;\n\nconst placeholder = 'dd.mm.åååå';\n\nfunction FormikDatepicker<FieldName>({\n    validate,\n    label,\n    name,\n    id,\n    info,\n    showYearSelector,\n    fullscreenOverlay,\n    fullScreenOnMobile,\n    feil,\n    minDate,\n    maxDate,\n    disableWeekend,\n    disabledDateRanges,\n    inputTitle,\n    onChange,\n    description,\n    disableFormatValidation = false,\n    invalidFormatErrorKey = 'common.fieldvalidation.dato.ugyldigFormat',\n    ...restProps\n}: FormikDatepickerProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    const isWide = useMedia({ minWidth: 736 });\n    const elementId = id || guid();\n    const position: CalendarPlacement | undefined =\n        fullscreenOverlay || (fullScreenOnMobile && isWide === false) ? 'fullscreen' : undefined;\n    const inputName = (name || '') as string;\n\n    const validations = disableFormatValidation ? [] : [(value) => validateDateString(value, invalidFormatErrorKey)];\n    if (validate) {\n        validations.push(validate);\n    }\n\n    return (\n        <Field validate={validateAll(validations)} name={name}>\n            {({ field, form }: FieldProps<string>) => {\n                const isInvalid = (feil || getFeilPropForFormikInput({ field, form, context, feil })) !== undefined;\n                // const fieldValue = field.value || {};\n                const handleOnDatepickerChange: DatepickerChange = (dateString) => {\n                    if (field.value !== dateString) {\n                        form.setFieldValue(field.name, dateString);\n                        if (onChange) {\n                            onChange(dateString);\n                        }\n                        if (context) {\n                            context.onAfterFieldValueSet();\n                        }\n                    }\n                };\n\n                return (\n                    <SkjemagruppeQuestion feil={getFeilPropForFormikInput({ field, form, context, feil })}>\n                        <Label htmlFor={elementId}>\n                            <LabelWithInfo info={info}>{label}</LabelWithInfo>\n                        </Label>\n                        {description && <div className={'skjemaelement__description'}>{description}</div>}\n                        <Datepicker\n                            inputId={elementId}\n                            {...restProps}\n                            inputProps={{ name: inputName, placeholder, 'aria-invalid': isInvalid, title: inputTitle }}\n                            value={field.value}\n                            limitations={datepickerUtils.parseDateLimitations({\n                                minDate,\n                                maxDate,\n                                disableWeekend,\n                                disabledDateRanges,\n                            })}\n                            showYearSelector={showYearSelector}\n                            calendarSettings={{\n                                position,\n                            }}\n                            onChange={handleOnDatepickerChange}\n                        />\n                    </SkjemagruppeQuestion>\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikDatepicker;\n","import moment from 'moment';\nimport { DatepickerLimitations, DatepickerDateRange, isISODateString } from 'nav-datovelger';\nimport { DatepickerLimitiations } from './FormikDatepicker';\n\nconst isoStringFormat = 'YYYY-MM-DD';\n\nexport const dateToISOString = (date?: Date) => (date ? moment(date).format(isoStringFormat) : '');\nexport const ISOStringToDate = (dateString = ''): Date | undefined => getDateFromDateString(dateString);\n\nconst parseDateLimitations = ({\n    minDate,\n    maxDate,\n    disabledDateRanges = [],\n    disableWeekend,\n}: DatepickerLimitiations): DatepickerLimitations => {\n    const invalidDateRanges: DatepickerDateRange[] = disabledDateRanges.map((d) => ({\n        from: dateToISOString(d.from),\n        to: dateToISOString(d.to),\n    }));\n    return {\n        minDate: minDate ? dateToISOString(minDate) : undefined,\n        maxDate: maxDate ? dateToISOString(maxDate) : undefined,\n        weekendsNotSelectable: disableWeekend,\n        invalidDateRanges,\n    };\n};\n\nconst getDateStringFromValue = (value?: Date | string): string | undefined => {\n    let date;\n    if (value && typeof value === 'string') {\n        if (isISODateString(value) === false) {\n            return value;\n        }\n        if (moment(value, moment.ISO_8601, true).isValid()) {\n            date = moment(value).toDate();\n        }\n    } else if (typeof value === 'object') {\n        date = value;\n    }\n    return date ? dateToISOString(date) : undefined;\n};\n\nconst getDateFromDateString = (dateString: string | undefined): Date | undefined => {\n    if (dateString === undefined) {\n        return undefined;\n    }\n    if (isISODateString(dateString)) {\n        return new Date(dateString);\n    }\n    return undefined;\n};\n\nconst datepickerUtils = {\n    getDateStringFromValue,\n    getDateFromDateString,\n    parseDateLimitations,\n};\n\nexport default datepickerUtils;\n","import React from 'react';\nimport { Formik, FormikProps } from 'formik';\n\nexport interface TypedFormikWrapperProps<FormValues> extends Omit<Partial<FormikProps<FormValues>>, 'initialValues'> {\n    initialValues: Partial<FormValues>;\n    renderForm: (formik: FormikProps<FormValues>) => React.ReactNode;\n    onSubmit: (values: Partial<FormValues>) => void;\n}\n\nfunction TypedFormikWrapper<FormValues>(props: TypedFormikWrapperProps<FormValues>) {\n    const { onSubmit, initialValues, renderForm: renderFormContent, ...restProps } = props;\n    return (\n        <Formik<Partial<FormValues>>\n            initialValues={initialValues}\n            onSubmit={(values, { setSubmitting, setTouched }) => {\n                setSubmitting(false);\n                setTouched({});\n                setTimeout(() => {\n                    onSubmit(values);\n                });\n            }}\n            {...restProps}>\n            {(formik: FormikProps<FormValues>) => renderFormContent(formik)}\n        </Formik>\n    );\n}\nexport default TypedFormikWrapper;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { RadioPanelGruppe, RadioPanelGruppeProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport '../../styles/nav-frontend-skjema-extension.less';\n\ninterface OwnProps<FieldName> extends Omit<RadioPanelGruppeProps, 'name' | 'onChange'> {\n    name: FieldName;\n    useTwoColumns?: boolean;\n}\n\nexport type FormikRadioPanelGroupProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikRadioPanelGroup<FieldName>({\n    name,\n    validate,\n    legend,\n    radios,\n    info,\n    feil,\n    useTwoColumns,\n    ...restProps\n}: FormikRadioPanelGroupProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <RadioPanelGruppe\n                        {...restProps}\n                        name={field.name}\n                        className={useTwoColumns ? 'twoColumnPanelGruppe' : undefined}\n                        checked={field.value}\n                        legend={<LabelWithInfo info={info}>{legend}</LabelWithInfo>}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        onChange={(evt, value) => {\n                            form.setFieldValue(field.name, value);\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}\n                        radios={radios.map((rb) => ({\n                            name: `${name}`,\n                            ...rb,\n                        }))}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikRadioPanelGroup;\n","import React, { useState } from 'react';\nimport { guid } from 'nav-frontend-js-utils';\nimport { Time } from '../../types';\nimport bemUtils from '../../utils/bemUtils';\nimport './timeInput.less';\n\nconst MAX_HOURS = 23;\nconst MAX_MINUTES = 59;\n\ntype TimeInputChangeFunc = (time: Partial<Time> | undefined) => void;\n\ninterface TimeInputProps {\n    time?: Time | Partial<Time> | undefined;\n    maxHours?: number;\n    maxMinutes?: number;\n    onChange: TimeInputChangeFunc;\n    layout?: 'normal' | 'compact';\n}\n\nconst bem = bemUtils('timeInput');\n\nconst handleTimeChange = (time: Partial<Time>, onChange: TimeInputChangeFunc) => {\n    if ((time.hours === undefined || isNaN(time.hours)) && (time.minutes === undefined || isNaN(time.minutes))) {\n        onChange(undefined);\n    } else {\n        onChange(time);\n    }\n};\n\nconst getNewTime = (\n    stateTime: Partial<Time> | undefined = {},\n    values: { hours?: string; minutes?: string }\n): Partial<Time> => {\n    if (values.hours !== undefined) {\n        const hours = parseInt(values.hours, 10);\n        if (!isNaN(hours)) {\n            return {\n                ...stateTime,\n                hours,\n            };\n        }\n        return stateTime.minutes ? { ...stateTime, hours: undefined } : { hours: undefined };\n    }\n    if (values.minutes !== undefined) {\n        const minutes = parseInt(values.minutes, 10);\n        if (!isNaN(minutes)) {\n            return {\n                ...stateTime,\n                minutes,\n            };\n        }\n        return stateTime.hours ? { ...stateTime, minutes: undefined } : { minutes: undefined };\n    }\n\n    return stateTime;\n};\n\nconst TimeInput = ({\n    time = { hours: undefined, minutes: undefined },\n    maxHours = MAX_HOURS,\n    maxMinutes = MAX_MINUTES,\n    onChange,\n    layout = 'compact',\n}: TimeInputProps) => {\n    const [stateTime, setStateTime] = useState<Partial<Time> | undefined>(time);\n    const hours =\n        !stateTime || stateTime.hours === undefined || isNaN(stateTime.hours)\n            ? ''\n            : Math.min(stateTime.hours, maxHours);\n    const minutes =\n        !stateTime || stateTime.minutes === undefined || isNaN(stateTime.minutes)\n            ? ''\n            : Math.min(stateTime.minutes, maxMinutes);\n    const id = guid();\n    const hoursLabelId = `${id}-hours`;\n    const minutesLabelId = `${id}-minutes`;\n\n    return (\n        <div className={bem.classNames(bem.block, bem.modifier(layout))}>\n            <div className={bem.element('contentWrapper')}>\n                <div className={bem.element('inputWrapper')}>\n                    <label className={bem.element('label')} htmlFor={hoursLabelId}>\n                        Timer\n                    </label>\n                    <input\n                        id={hoursLabelId}\n                        className={bem.element('hours')}\n                        type=\"number\"\n                        min={0}\n                        max={maxHours}\n                        maxLength={2}\n                        value={hours}\n                        autoComplete=\"off\"\n                        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                            const newTime = getNewTime(stateTime, { hours: evt.target.value });\n                            setStateTime(newTime);\n                            handleTimeChange(newTime, onChange);\n                        }}\n                    />\n                </div>\n                <div className={bem.element('inputWrapper')}>\n                    <label className={bem.element('label')} htmlFor={minutesLabelId}>\n                        Minutter\n                    </label>\n                    <input\n                        id={minutesLabelId}\n                        className={bem.element('minutes')}\n                        type=\"number\"\n                        min={0}\n                        maxLength={2}\n                        max={maxMinutes}\n                        value={minutes}\n                        autoComplete=\"off\"\n                        onBlur={(evt: React.FocusEvent<HTMLInputElement>) => {\n                            if (evt.target.value === '' || evt.target.value === '0') {\n                                const newTime = {\n                                    ...stateTime,\n                                    minutes: stateTime && stateTime.hours !== undefined ? 0 : undefined,\n                                };\n                                setStateTime(newTime);\n                                handleTimeChange(newTime, onChange);\n                            }\n                        }}\n                        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n                            const newTime = getNewTime(stateTime, { minutes: evt.target.value });\n                            setStateTime(newTime);\n                            handleTimeChange(newTime, onChange);\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default TimeInput;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { InputProps, Label } from 'nav-frontend-skjema';\nimport { Time, TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport SkjemagruppeQuestion from '../helpers/skjemagruppe-question/SkjemagruppeQuestion';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport TimeInput from './TimeInput';\n\ninterface OwnProps<FieldName> extends Omit<InputProps, 'name' | 'onChange'> {\n    name: FieldName;\n    maxHours?: number;\n    maxMinutes?: number;\n}\n\nexport type FormikTimeInputProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikTimeInput<FieldName>({\n    label,\n    name,\n    validate,\n    info,\n    feil,\n    ...restProps\n}: FormikTimeInputProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <SkjemagruppeQuestion feil={getFeilPropForFormikInput({ field, form, context, feil })}>\n                        <Label htmlFor={field.name}>\n                            <LabelWithInfo info={info}>{label}</LabelWithInfo>\n                        </Label>\n\n                        <TimeInput\n                            {...restProps}\n                            {...field}\n                            time={field.value || undefined}\n                            onChange={(time: Partial<Time> | undefined) => {\n                                form.setFieldValue(field.name, time);\n                                if (context) {\n                                    context.onAfterFieldValueSet();\n                                }\n                            }}\n                        />\n                    </SkjemagruppeQuestion>\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikTimeInput;\n","export enum YesOrNo {\n    'YES' = 'yes',\n    'NO' = 'no',\n    'UNANSWERED' = 'unanswered',\n    'DO_NOT_KNOW' = 'doNotKnow',\n}\n\nexport interface Time {\n    hours: number;\n    minutes: number;\n}\nexport interface DateRange {\n    from: Date;\n    to: Date;\n}\n\nexport type FormikValidateFunction<ValueType = any> = (value: ValueType) => any;\n\nexport type NavFrontendSkjemaFeil = React.ReactNode | boolean;\n\nexport interface TypedFormInputCommonProps<ValueType = any> {\n    validate?: FormikValidateFunction<ValueType>;\n    info?: React.ReactNode;\n}\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Checkbox, CheckboxProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\ninterface OwnProps<FieldName> extends Omit<CheckboxProps, 'name'> {\n    name: FieldName;\n    afterOnChange?: (newValue: boolean) => void;\n}\n\nexport type FormikCheckboxProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikCheckbox<FieldName>({\n    name,\n    label,\n    validate,\n    afterOnChange,\n    info,\n    feil,\n    ...restProps\n}: FormikCheckboxProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <Checkbox\n                        {...restProps}\n                        {...field}\n                        label={<LabelWithInfo info={info}>{label}</LabelWithInfo>}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        checked={field.value === true}\n                        onChange={(evt) => {\n                            const newValue = evt.target.checked;\n                            form.setFieldValue(field.name, newValue);\n                            if (afterOnChange) {\n                                afterOnChange(newValue);\n                            }\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikCheckbox;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { CheckboksPanelGruppe, CheckboksPanelGruppeProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport '../../styles/nav-frontend-skjema-extension.less';\n\ninterface OwnProps<FieldName> extends Omit<CheckboksPanelGruppeProps, 'onChange'> {\n    name: FieldName;\n    useTwoColumns?: boolean;\n}\n\nexport type FormikCheckboxPanelGroupProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nconst removeElementFromArray = (element: any, array: any[], keyProp?: string) =>\n    array.filter((el) => {\n        return keyProp ? el[keyProp] !== element[keyProp] : el !== element;\n    });\n\nconst isCheckboxChecked = (fieldValues: any[], value: any): boolean => {\n    return fieldValues.includes(value);\n};\n\nfunction FormikCheckboxPanelGroup<FieldName>({\n    name,\n    validate,\n    legend,\n    feil,\n    checkboxes,\n    info,\n    useTwoColumns,\n    ...restProps\n}: FormikCheckboxPanelGroupProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <CheckboksPanelGruppe\n                        {...restProps}\n                        {...field}\n                        legend={<LabelWithInfo info={info}>{legend}</LabelWithInfo>}\n                        checkboxes={checkboxes.map((cb) => ({\n                            ...cb,\n                            checked: isCheckboxChecked(field.value, cb.value),\n                        }))}\n                        className={useTwoColumns ? 'twoColumnPanelGruppe' : undefined}\n                        onChange={(evt, value) => {\n                            if (isCheckboxChecked(field.value, value)) {\n                                form.setFieldValue(`${name}`, removeElementFromArray(value, field.value));\n                            } else {\n                                if (field.value) {\n                                    field.value.push(value);\n                                } else {\n                                    field.value = [value];\n                                }\n                                form.setFieldValue(`${name}`, field.value);\n                                if (context) {\n                                    context.onAfterFieldValueSet();\n                                }\n                            }\n                        }}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikCheckboxPanelGroup;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { BekreftCheckboksPanel, BekreftCheckboksPanelProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\ninterface OwnProps<FieldName> extends Omit<BekreftCheckboksPanelProps, 'onChange' | 'checked'> {\n    name: FieldName;\n}\n\nexport type FormikConfirmationCheckboxPanelProps<FieldName> = OwnProps<FieldName> &\n    Omit<TypedFormInputCommonProps, 'info'>;\n\nfunction FormikConfirmationCheckboxPanel<FieldName>({\n    children,\n    name,\n    feil,\n    validate,\n    ...restProps\n}: FormikConfirmationCheckboxPanelProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <BekreftCheckboksPanel\n                        {...restProps}\n                        {...field}\n                        checked={field.value === true}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        onChange={(evt) => {\n                            form.setFieldValue(`${name}`, (evt as React.ChangeEvent<HTMLInputElement>).target.checked);\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}>\n                        {children}\n                    </BekreftCheckboksPanel>\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikConfirmationCheckboxPanel;\n","import * as countries from 'i18n-iso-countries';\n\ncountries.registerLocale(require('i18n-iso-countries/langs/nb.json'));\ncountries.registerLocale(require('i18n-iso-countries/langs/nn.json'));\n\nexport const getCountryName = (alphaCode: string, locale: string): string => {\n    return countries.getName(alphaCode, locale);\n};\n\nexport const getCountries = () => countries;\n","import React from 'react';\nimport { SkjemaGruppe } from 'nav-frontend-skjema';\nimport FormikDatepicker, { FormikDatepickerProps } from '../formik-datepicker/FormikDatepicker';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport './dateIntervalPicker.less';\n\nexport interface DateIntervalPickerProps<FieldName> {\n    legend?: string;\n    fromDatepickerProps: FormikDatepickerProps<FieldName>;\n    toDatepickerProps: FormikDatepickerProps<FieldName>;\n    info?: string;\n    description?: React.ReactNode;\n}\n\nfunction FormikDateIntervalPicker<FieldName>({\n    legend,\n    fromDatepickerProps,\n    toDatepickerProps,\n    description,\n    info,\n}: DateIntervalPickerProps<FieldName>) {\n    return (\n        <SkjemaGruppe\n            legend={legend ? <LabelWithInfo info={info}>{legend}</LabelWithInfo> : undefined}\n            description={description}\n            className=\"dateIntervalPicker\">\n            <div className=\"dateIntervalPicker__flexContainer\">\n                <FormikDatepicker<FieldName> {...fromDatepickerProps} />\n                <FormikDatepicker<FieldName> {...toDatepickerProps} />\n            </div>\n        </SkjemaGruppe>\n    );\n}\n\nexport default FormikDateIntervalPicker;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Input, InputProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\ntype InputMode = 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n\ninterface OwnProps<FieldName> extends Omit<InputProps, 'name'> {\n    name: FieldName;\n    inputmode?: InputMode;\n}\n\nconst getPatternForInputMode = (inputMode?: InputMode): string | undefined => {\n    switch (inputMode) {\n        case 'numeric':\n            return '[0-9]*';\n        default:\n            return undefined;\n    }\n};\n\nexport type FormikInputProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikInput<FieldName>({\n    label,\n    name,\n    info,\n    feil,\n    validate,\n    inputMode,\n    autoComplete,\n    ...restProps\n}: FormikInputProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <Input\n                        {...restProps}\n                        {...field}\n                        autoComplete={autoComplete || 'off'}\n                        inputMode={inputMode}\n                        pattern={getPatternForInputMode(inputMode)}\n                        label={<LabelWithInfo info={info}>{label}</LabelWithInfo>}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        value={field.value === undefined ? '' : field.value}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikInput;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { SkjemaGruppe, SkjemaGruppeProps } from 'nav-frontend-skjema';\nimport { Feilmelding } from 'nav-frontend-typografi';\nimport { NavFrontendSkjemaFeil, TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport './formikInputGroup.less';\n\ninterface OwnProps<FieldName> extends SkjemaGruppeProps {\n    name: FieldName;\n    feil?: NavFrontendSkjemaFeil;\n}\n\nexport type FormikInputGroupProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikInputGroup<FieldName>({\n    name,\n    legend,\n    feil,\n    children,\n    info,\n    validate,\n    className,\n    ...restProps\n}: FormikInputGroupProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                const errorMsg = getFeilPropForFormikInput({ field, form, context, feil });\n                const isRenderableErrorMsgType = ['string', 'object'].includes(typeof errorMsg);\n                return (\n                    <SkjemaGruppe\n                        {...restProps}\n                        className={`${className ? className : ''} singleInputWrapper`}\n                        legend={<LabelWithInfo info={info}>{legend}</LabelWithInfo>}>\n                        {children}\n\n                        {/** Må sette inn denne selv pga feil på SkjemaGruppe påvirker styling av alle elementer i gruppen*/}\n                        <div aria-live=\"polite\">\n                            <div tabIndex={-1} id={field.name} className=\"focusable-feilmelding\">\n                                {isRenderableErrorMsgType && <Feilmelding>{errorMsg}</Feilmelding>}\n                            </div>\n                        </div>\n                    </SkjemaGruppe>\n                );\n            }}\n        </Field>\n    );\n}\nexport default FormikInputGroup;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Select, SelectProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\ninterface OwnProps<FieldName> extends Omit<SelectProps, 'name'> {\n    name: FieldName;\n}\n\nexport type FormikSelectProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikSelect<FieldName>({\n    label,\n    name,\n    children,\n    validate,\n    info,\n    feil,\n    ...restProps\n}: FormikSelectProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <Select\n                        label={<LabelWithInfo info={info}>{label}</LabelWithInfo>}\n                        {...field}\n                        {...restProps}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        value={field.value === undefined ? '' : field.value}>\n                        {children}\n                    </Select>\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikSelect;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Textarea, TextareaControlledProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\ninterface OwnProps<FieldName> extends Omit<TextareaControlledProps, 'name' | 'defaultValue'> {\n    name: FieldName;\n}\n\nexport type FormikTextareaProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikTextarea<FieldName>({\n    label,\n    name,\n    validate,\n    info,\n    feil,\n    ...restProps\n}: FormikTextareaProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <Textarea\n                        label={<LabelWithInfo info={info}>{label}</LabelWithInfo>}\n                        {...restProps}\n                        {...field}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        onChange={(evt) => {\n                            form.setFieldValue(field.name, evt.target.value);\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}\n                        value={field.value || ''}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikTextarea;\n","import React from 'react';\nimport { PopoverOrientering } from 'nav-frontend-popover';\nimport { TypedFormInputCommonProps, YesOrNo } from '../../types';\nimport FormikRadioPanelGroup, { FormikRadioPanelGroupProps } from '../formik-radio-panel-group/FormikRadioPanelGroup';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\n\nexport interface FormikYesOrNoQuestionProps<FieldName> extends Omit<FormikRadioPanelGroupProps<FieldName>, 'radios'> {\n    includeDoNotKnowOption?: boolean;\n    infoPlassering?: PopoverOrientering;\n    useTwoColumns?: boolean;\n    labels?: {\n        [YesOrNo.YES]?: string;\n        [YesOrNo.NO]?: string;\n        [YesOrNo.DO_NOT_KNOW]?: string;\n    };\n}\n\nfunction FormikYesOrNoQuestion<FieldName>({\n    legend,\n    name,\n    includeDoNotKnowOption,\n    labels,\n    infoPlassering,\n    useTwoColumns = true,\n    info,\n    ...restProps\n}: FormikYesOrNoQuestionProps<FieldName> & TypedFormInputCommonProps) {\n    const { yes: yesLabel = 'Ja', no: noLabel = 'Nei', doNotKnow: doNotKnowLabel = 'Vet ikke' } = labels || {};\n    return (\n        <FormikRadioPanelGroup<FieldName>\n            radios={[\n                { label: yesLabel, value: YesOrNo.YES },\n                { label: noLabel, value: YesOrNo.NO },\n                ...(includeDoNotKnowOption ? [{ label: doNotKnowLabel, value: YesOrNo.DO_NOT_KNOW }] : []),\n            ]}\n            {...restProps}\n            legend={\n                <LabelWithInfo infoPlassering={infoPlassering} info={info}>\n                    {legend}\n                </LabelWithInfo>\n            }\n            name={name}\n            useTwoColumns={includeDoNotKnowOption ? false : useTwoColumns}\n        />\n    );\n}\n\nexport default FormikYesOrNoQuestion;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormikCheckboxPanelGroup, {\n    FormikCheckboxPanelGroupProps,\n} from './formik-checkbox-panel-group/FormikCheckboxPanelGroup';\nimport FormikCheckbox, { FormikCheckboxProps } from './formik-checkbox/FormikCheckbox';\nimport FormikConfirmationCheckboxPanel, {\n    FormikConfirmationCheckboxPanelProps,\n} from './formik-confirmation-checkbox-panel/FormikConfirmationCheckboxPanel';\nimport FormikCountrySelect, { FormikCountrySelectProps } from './formik-country-select/FormikCountrySelect';\nimport FormikDateIntervalPicker, {\n    DateIntervalPickerProps,\n} from './formik-date-interval-picker/FormikDateIntervalPicker';\nimport FormikDatepicker, { FormikDatepickerProps } from './formik-datepicker/FormikDatepicker';\nimport FormikDateRangePicker, { FormikDateRangePickerProps } from './formik-date-range-picker/FormikDateRangePicker';\nimport FormikFileInput, { FormikFileInputProps } from './formik-file-input/FormikFileInput';\nimport FormikInputGroup, { FormikInputGroupProps } from './formik-input-group/FormikInputGroup';\nimport FormikInput, { FormikInputProps } from './formik-input/FormikInput';\nimport FormikRadioPanelGroup, { FormikRadioPanelGroupProps } from './formik-radio-panel-group/FormikRadioPanelGroup';\nimport FormikSelect, { FormikSelectProps } from './formik-select/FormikSelect';\nimport FormikTextarea, { FormikTextareaProps } from './formik-textarea/FormikTextarea';\nimport FormikTimeInput, { FormikTimeInputProps } from './formik-time-input/FormikTimeInput';\nimport FormikYesOrNoQuestion, { FormikYesOrNoQuestionProps } from './formik-yes-or-no-question/FormikYesOrNoQuestion';\nimport TypedFormikForm, { TypedFormikFormProps } from './typed-formik-form/TypedFormikForm';\nimport TypedFormikWrapper, { TypedFormikWrapperProps } from './typed-formik-wrapper/TypedFormikWrapper';\nimport '../styles/nav-frontend-skjema-extension.less';\n\nexport function getTypedFormComponents<FieldNames, FormValues>() {\n    return {\n        Checkbox: (props: FormikCheckboxProps<FieldNames>) => <FormikCheckbox<FieldNames> {...props} />,\n        CheckboxPanelGroup: (props: FormikCheckboxPanelGroupProps<FieldNames>) => (\n            <FormikCheckboxPanelGroup<FieldNames> {...props} />\n        ),\n        ConfirmationCheckbox: (props: FormikConfirmationCheckboxPanelProps<FieldNames>) => (\n            <FormikConfirmationCheckboxPanel<FieldNames> {...props} />\n        ),\n        CountrySelect: (props: FormikCountrySelectProps<FieldNames>) => <FormikCountrySelect<FieldNames> {...props} />,\n        DatePicker: (props: FormikDatepickerProps<FieldNames>) => <FormikDatepicker<FieldNames> {...props} />,\n        DateIntervalPicker: (props: DateIntervalPickerProps<FieldNames>) => (\n            <FormikDateIntervalPicker<FieldNames> {...props} />\n        ),\n        DateRangePicker: (props: FormikDateRangePickerProps<FieldNames>) => (\n            <FormikDateRangePicker<FieldNames> {...props} />\n        ),\n        FileInput: (props: FormikFileInputProps<FieldNames>) => <FormikFileInput<FieldNames> {...props} />,\n        Form: (props: TypedFormikFormProps<FormValues>) => <TypedFormikForm {...props} />,\n        FormikWrapper: (props: TypedFormikWrapperProps<FormValues>) => <TypedFormikWrapper {...props} />,\n        Input: (props: FormikInputProps<FieldNames>) => <FormikInput<FieldNames> {...props} />,\n        InputGroup: (props: FormikInputGroupProps<FieldNames>) => <FormikInputGroup<FieldNames> {...props} />,\n        RadioPanelGroup: (props: FormikRadioPanelGroupProps<FieldNames>) => (\n            <FormikRadioPanelGroup<FieldNames> {...props} />\n        ),\n        Select: (props: FormikSelectProps<FieldNames>) => <FormikSelect<FieldNames> {...props} />,\n        Textarea: (props: FormikTextareaProps<FieldNames>) => <FormikTextarea<FieldNames> {...props} />,\n        TimeInput: (props: FormikTimeInputProps<FieldNames>) => <FormikTimeInput<FieldNames> {...props} />,\n        YesOrNoQuestion: (props: FormikYesOrNoQuestionProps<FieldNames>) => (\n            <FormikYesOrNoQuestion<FieldNames> {...props} />\n        ),\n    };\n}\n","import React from 'react';\nimport Lenke from 'nav-frontend-lenker';\n\ninterface Props {\n    className?: string;\n    onClick: () => void;\n    children: React.ReactNode;\n}\n\nconst stopClickEvent = (evt: React.MouseEvent<HTMLAnchorElement>) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n};\n\nconst ValidationErrorLink = ({ onClick, children, className }: Props) => {\n    return (\n        <Lenke\n            className={className}\n            href=\"#\"\n            onClick={(evt) => {\n                stopClickEvent(evt);\n                onClick();\n            }}>\n            {children}\n        </Lenke>\n    );\n};\n\nexport default ValidationErrorLink;\n","import React, { useEffect, useRef } from 'react';\nimport { Feiloppsummering, FeiloppsummeringFeil } from 'nav-frontend-skjema';\nimport ValidationErrorLink from './ValidationErrorLink';\n\ninterface Props {\n    title?: string;\n    errorMessages: FeiloppsummeringFeil[];\n    focusOnMount?: boolean;\n}\n\nconst ValidationSummary = ({ title, errorMessages }: Props) => {\n    const summaryEl = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        const { current } = summaryEl;\n        if (current !== null) {\n            current.focus();\n        }\n    }, []);\n    return (\n        <Feiloppsummering\n            innerRef={summaryEl}\n            tittel={title || 'Feil i skjema'}\n            feil={errorMessages}\n            customFeilRender={(feil) => (\n                <ValidationErrorLink\n                    className={'lenke'}\n                    onClick={() => {\n                        const elementById = document.getElementById(feil.skjemaelementId);\n                        const elementByName = document.getElementsByName(feil.skjemaelementId)[0];\n                        if (elementById) {\n                            elementById.focus();\n                        } else if (elementByName) {\n                            elementByName.focus();\n                        }\n                    }}>\n                    {feil.feilmelding}\n                </ValidationErrorLink>\n            )}\n        />\n    );\n};\nexport default ValidationSummary;\n","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { FeiloppsummeringFeil } from 'nav-frontend-skjema';\nimport { getAllErrors } from '../../utils/typedFormErrorUtils';\nimport ValidationSummary from '../helpers/ValidationSummary';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\n\nfunction FormikValidationErrorSummary() {\n    const context = React.useContext(TypedFormikFormContext);\n    const formik = useFormikContext();\n    if (formik && context && context.showErrors) {\n        const allErrors = !formik.isValid && getAllErrors(formik);\n        const errorMessages: FeiloppsummeringFeil[] | undefined = allErrors\n            ? Object.keys(allErrors).map((key) => {\n                  const error = allErrors[key];\n                  const feil: FeiloppsummeringFeil = {\n                      feilmelding: context.fieldErrorRenderer ? context.fieldErrorRenderer(error) : error,\n                      skjemaelementId: key,\n                  };\n                  return feil;\n              })\n            : undefined;\n\n        if (errorMessages) {\n            return <ValidationSummary errorMessages={errorMessages} />;\n        }\n    }\n\n    return null;\n}\n\nexport default FormikValidationErrorSummary;\n","import React from 'react';\n\nfunction UploadSvg(props: any) {\n    return (\n        <svg width={22} height={22} viewBox=\"0 0 24 24\" {...props}>\n            <title>{'Opplastingsikon'}</title>\n            <path\n                d=\"M22 18.435v1.826C22 21.773 20.832 23 19.392 23H4.608C3.168 23 2 21.773 2 20.26v-1.825M12 2v15.522m-6.364-9.13L12 2l6.364 6.391\"\n                stroke=\"#0067C5\"\n                strokeWidth={0.93}\n                fill=\"none\"\n                fillRule=\"evenodd\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n}\n\nexport default UploadSvg;\n","import React from 'react';\nimport { Element } from 'nav-frontend-typografi';\nimport { NavFrontendSkjemaFeil } from '../../../types';\nimport SkjemagruppeQuestion from '../../helpers/skjemagruppe-question/SkjemagruppeQuestion';\nimport UploadSvg from './UploadSvg';\nimport './fileInput.less';\n\ninterface FileInputProps {\n    id: string;\n    label: string;\n    name: string;\n    onFilesSelect: (files: File[]) => void;\n    multiple?: boolean;\n    acceptedExtensions: string;\n    feil?: NavFrontendSkjemaFeil;\n    onClick?: () => void;\n}\n\nexport default class FileInput extends React.Component<FileInputProps> {\n    constructor(props: FileInputProps) {\n        super(props);\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\n        this.onFileDropHandler = this.onFileDropHandler.bind(this);\n        this.onFileDragOverHandler = this.onFileDragOverHandler.bind(this);\n        this.onFileSelect = this.onFileSelect.bind(this);\n        this.onKeyPress = this.onKeyPress.bind(this);\n    }\n\n    fileSelectHandler(fileList: FileList) {\n        const files = Array.from(fileList) as File[];\n        this.props.onFilesSelect(files);\n    }\n\n    onFileDragOverHandler(e: React.DragEvent<HTMLLabelElement>) {\n        e.preventDefault();\n    }\n\n    onFileDropHandler(e: React.DragEvent<HTMLLabelElement>) {\n        e.preventDefault();\n        this.fileSelectHandler(e.dataTransfer.files);\n    }\n\n    onFileSelect(e: React.ChangeEvent<HTMLInputElement>) {\n        if (e.target.files) {\n            this.fileSelectHandler(e.target.files);\n            e.target.value = '';\n        }\n    }\n\n    onKeyPress(e: React.KeyboardEvent<HTMLLabelElement>) {\n        const { id } = this.props;\n        const ENTER_KEYCODE = 13;\n        const inputElement = document.getElementById(id);\n        if (e.which === ENTER_KEYCODE && inputElement !== null) {\n            inputElement.click();\n        }\n    }\n\n    render() {\n        const { id, name, label, feil, multiple, onClick, acceptedExtensions } = this.props;\n        const inputId = `${id}-input`;\n\n        return (\n            <SkjemagruppeQuestion\n                feil={feil}\n                className={`fileInput ${feil !== undefined ? 'fileInput--withError' : ''}`}>\n                <label\n                    role=\"button\" // eslint-disable-line\n                    id={id}\n                    tabIndex={0}\n                    htmlFor={inputId}\n                    className=\"attachmentButton\"\n                    onDragOver={this.onFileDragOverHandler}\n                    onDrop={this.onFileDropHandler}\n                    onKeyPress={this.onKeyPress}\n                    onClick={onClick}>\n                    <div className=\"attachmentButton__icon\">\n                        <UploadSvg />\n                    </div>\n                    <Element className=\"attachmentButton__label\">{label}</Element>\n                    <input\n                        id={inputId}\n                        name={name}\n                        type=\"file\"\n                        accept={acceptedExtensions}\n                        onChange={(e) => this.onFileSelect(e)}\n                        multiple={multiple === true}\n                    />\n                </label>\n            </SkjemagruppeQuestion>\n        );\n    }\n}\n","import React from 'react';\nimport { ArrayHelpers, Field, FieldArray, FieldProps } from 'formik';\nimport { NavFrontendSkjemaFeil, TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport FileInput from './file-input/FileInput';\n\nexport interface FormikFileInputProps<FieldName> {\n    name: FieldName;\n    label: string;\n    acceptedExtensions: string;\n    feil?: NavFrontendSkjemaFeil;\n    onFilesSelect: (files: File[], arrayHelpers: ArrayHelpers) => void;\n    onClick?: () => void;\n}\n\nfunction FormikFileInput<FieldName>({\n    label,\n    name,\n    acceptedExtensions,\n    validate,\n    onFilesSelect,\n    feil,\n    onClick,\n}: FormikFileInputProps<FieldName> & TypedFormInputCommonProps) {\n    const context = React.useContext(TypedFormikFormContext);\n\n    return (\n        <FieldArray\n            name={`${name}`}\n            render={(arrayHelpers) => (\n                <Field validate={validate} name={name}>\n                    {({ field, form }: FieldProps) => {\n                        return (\n                            <FileInput\n                                id={field.name}\n                                name={field.name}\n                                label={label}\n                                onClick={onClick}\n                                onFilesSelect={(files) => onFilesSelect(files, arrayHelpers)}\n                                multiple={true}\n                                acceptedExtensions={acceptedExtensions}\n                                feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                            />\n                        );\n                    }}\n                </Field>\n            )}\n        />\n    );\n}\n\nexport default FormikFileInput;\n","import React from 'react';\nimport { Select, SelectProps } from 'nav-frontend-skjema';\nimport { getCountries } from '../../utils/countryUtils';\n\ninterface Props extends Omit<SelectProps, 'onChange' | 'children'> {\n    label: React.ReactNode;\n    name: string;\n    defaultValue?: string;\n    locale?: string;\n    onChange: (countryCode: string) => void;\n    showOnlyEuAndEftaCountries?: boolean;\n    useAlpha3Code?: boolean;\n}\n\nexport type ChangeEvent = React.ChangeEvent<HTMLSelectElement>;\n\ninterface CountryOptionsCache {\n    locale: string;\n    options: React.ReactNode[];\n}\n\nconst filteredListEØSCountries = (countryOptionValue: string, shouldFilter?: boolean) => {\n    if (shouldFilter) {\n        switch (countryOptionValue) {\n            case 'BE':\n            case 'BG':\n            case 'DK':\n            case 'EE':\n            case 'FI':\n            case 'FR':\n            case 'GR':\n            case 'IE':\n            case 'IS':\n            case 'IT':\n            case 'HR':\n            case 'CY':\n            case 'LV':\n            case 'LI':\n            case 'LT':\n            case 'LU':\n            case 'MT':\n            case 'NL':\n            case 'PL':\n            case 'PT':\n            case 'RO':\n            case 'SK':\n            case 'SI':\n            case 'ES':\n            case 'GB':\n            case 'SE':\n            case 'CZ':\n            case 'DE':\n            case 'HU':\n            case 'AT':\n            case 'CH':\n                return true;\n            default:\n                return false;\n        }\n    } else {\n        // Filter ut Antarktis\n        return countryOptionValue !== 'AQ';\n    }\n};\n\nconst createCountryOptions = (\n    onluEuAndEftaCountries: boolean,\n    locale: string,\n    useAlpha3Code = true\n): React.ReactNode[] => {\n    const lang = locale === 'en' ? 'nn' : 'nb';\n    const countries = getCountries();\n\n    const names: [string, any][] = Object.entries(countries.getNames(lang));\n    return names\n        .sort((a: string[], b: string[]) => a[1].localeCompare(b[1], lang))\n        .filter((countryOptionValue: string[]) =>\n            filteredListEØSCountries(countryOptionValue[0], onluEuAndEftaCountries)\n        )\n        .map((countryOptionValue: string[]) => (\n            <option\n                key={countryOptionValue[0]}\n                value={useAlpha3Code ? countries.alpha2ToAlpha3(countryOptionValue[0]) : countryOptionValue[0]}>\n                {countryOptionValue[1]}\n            </option>\n        ));\n};\n\nclass CountrySelect extends React.Component<Props> {\n    countryOptionsCache: CountryOptionsCache | undefined;\n    constructor(props: Props) {\n        super(props);\n        this.getCountryOptions = this.getCountryOptions.bind(this);\n        this.updateCache = this.updateCache.bind(this);\n    }\n\n    updateCache(locale: string) {\n        this.countryOptionsCache = {\n            locale,\n            options: createCountryOptions(\n                this.props.showOnlyEuAndEftaCountries ? this.props.showOnlyEuAndEftaCountries : false,\n                locale,\n                this.props.useAlpha3Code\n            ),\n        };\n    }\n\n    getCountryOptions(locale: string): React.ReactNode[] {\n        if (!this.countryOptionsCache || locale !== this.countryOptionsCache.locale) {\n            this.updateCache(locale);\n        }\n        return this.countryOptionsCache && this.countryOptionsCache.options ? this.countryOptionsCache.options : [];\n    }\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onChange, name, showOnlyEuAndEftaCountries, locale, useAlpha3Code, ...restProps } = this.props;\n        return (\n            <Select name={name} {...restProps} onChange={(e) => onChange(e.target.value)}>\n                <option value=\"\" />\n                {this.getCountryOptions(locale || 'nb')}\n            </Select>\n        );\n    }\n}\n\nexport default CountrySelect;\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { SelectProps } from 'nav-frontend-skjema';\nimport { TypedFormInputCommonProps } from '../../types';\nimport { getFeilPropForFormikInput } from '../../utils/typedFormErrorUtils';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { TypedFormikFormContext } from '../typed-formik-form/TypedFormikForm';\nimport CountrySelect from './CountrySelect';\n\ninterface OwnProps<FieldName> extends Omit<SelectProps, 'name' | 'children'> {\n    name: FieldName;\n    showOnlyEuAndEftaCountries?: boolean;\n    useAlpha3Code?: boolean;\n}\n\nexport type FormikCountrySelectProps<FieldName> = OwnProps<FieldName> & TypedFormInputCommonProps;\n\nfunction FormikCountrySelect<FieldName>({\n    label,\n    name,\n    feil,\n    validate,\n    info,\n    useAlpha3Code = true,\n    showOnlyEuAndEftaCountries,\n}: FormikCountrySelectProps<FieldName>) {\n    const context = React.useContext(TypedFormikFormContext);\n    return (\n        <Field validate={validate} name={name}>\n            {({ field, form }: FieldProps) => {\n                return (\n                    <CountrySelect\n                        label={<LabelWithInfo info={info}>{label}</LabelWithInfo>}\n                        {...field}\n                        feil={getFeilPropForFormikInput({ field, form, context, feil })}\n                        onChange={(value) => {\n                            form.setFieldValue(field.name, value);\n                            if (context) {\n                                context.onAfterFieldValueSet();\n                            }\n                        }}\n                        showOnlyEuAndEftaCountries={showOnlyEuAndEftaCountries}\n                        useAlpha3Code={useAlpha3Code}\n                    />\n                );\n            }}\n        </Field>\n    );\n}\n\nexport default FormikCountrySelect;\n","import classNames from 'classnames';\n\nconst bemUtils = (cls: string) => ({\n    block: cls,\n    element: (e?: string, m?: string) => `${cls}__${e}${m ? ` ${cls}__${e}--${m}` : ''}`,\n    modifier: (m?: string) => `${cls}--${m}`,\n    modifierConditional: (m: string | undefined, condition: boolean | undefined) =>\n        condition === true && m !== undefined ? `${cls}--${m}` : undefined,\n    child: (c: string) => bemUtils(bemUtils(cls).element(c)),\n    classNames,\n});\n\nexport default bemUtils;\n","import moment from 'moment';\nimport { DateRange } from '../../types';\nimport { DatepickerLimitiations } from '../formik-datepicker/FormikDatepicker';\n\nconst sortDateRange = (d1: DateRange, d2: DateRange): number => {\n    if (moment(d1.from).isSameOrBefore(d2.from)) {\n        return -1;\n    }\n    return 1;\n};\n\nconst sortDateRangeByToDate = (d1: DateRange, d2: DateRange): number => {\n    if (moment(d1.to).isSameOrBefore(d2.to)) {\n        return -1;\n    }\n    return 1;\n};\nexport const getRangesStartingAfterDate = (date: Date, dateRanges: DateRange[] = []): DateRange[] => {\n    return dateRanges.filter((dateRange) => moment(dateRange.from).isAfter(date, 'day'));\n};\n\nexport const getRangesEndingBeforeDate = (date: Date, dateRanges: DateRange[] = []): DateRange[] => {\n    return dateRanges.filter((dateRange) => moment(dateRange.to).isBefore(date, 'day'));\n};\n\nexport const findClosestDateAfterDate = (fromDate: Date, dates: Date[]): Date | undefined => {\n    const moments = dates.map((d) => moment(d)).filter((m) => m.isAfter(fromDate, 'day'));\n    return moments.length > 0 ? moment.min(moments).toDate() : undefined;\n};\n\nexport const findClosestDateBeforeDate = (fromDate: Date, dates: Date[]): Date | undefined => {\n    const moments = dates.map((d) => moment(d)).filter((m) => m.isBefore(fromDate, 'day'));\n    const maxDate = moments.length > 0 ? moment.max(moments).toDate() : undefined;\n    return maxDate;\n};\n\nexport const findClosestDateBeforeOrEqualDate = (fromDate: Date, dates: Date[]): Date | undefined => {\n    const moments = dates.map((d) => moment(d)).filter((m) => m.isSameOrBefore(fromDate, 'day'));\n    const maxDate = moments.length > 0 ? moment.max(moments).toDate() : undefined;\n    return maxDate;\n};\n\nexport const getClosestDateRangeBeforeDate = (date: Date, ranges: DateRange[]): DateRange | undefined => {\n    const rangesBeforeDate = getRangesEndingBeforeDate(date, ranges).sort(sortDateRangeByToDate).reverse();\n    return rangesBeforeDate.length === 0 ? undefined : rangesBeforeDate[0];\n};\n\nexport const getClosestDateRangeAfterDate = (date: Date, ranges: DateRange[]): DateRange | undefined => {\n    const rangesAfterDate = getRangesStartingAfterDate(date, ranges).sort(sortDateRange);\n    return rangesAfterDate.length === 0 ? undefined : rangesAfterDate[0];\n};\n\nconst getFollowingDate = (\n    dateRange: DateRange | undefined,\n    allowRangesToStartAndStopOnSameDate?: boolean\n): Date | undefined => {\n    if (!dateRange) {\n        return undefined;\n    }\n    return allowRangesToStartAndStopOnSameDate ? dateRange.from : moment(dateRange.from).subtract(1, 'day').toDate();\n};\n\nexport const getMaxDateForRangeStart = ({\n    fromDate,\n    toDate,\n    maxDate,\n    otherRanges: dateRanges = [],\n    allowRangesToStartAndStopOnSameDate,\n}: {\n    fromDate?: Date;\n    toDate?: Date;\n    maxDate?: Date;\n    otherRanges?: DateRange[];\n    allowRangesToStartAndStopOnSameDate?: boolean;\n}): Date | undefined => {\n    if (!fromDate) {\n        return toDate || maxDate;\n    }\n    const follwingDateRange = getClosestDateRangeAfterDate(fromDate, dateRanges);\n    const followingRangeeDate = getFollowingDate(follwingDateRange, allowRangesToStartAndStopOnSameDate);\n    const dates: Date[] = [\n        ...(toDate ? [toDate] : []),\n        ...(maxDate ? [maxDate] : []),\n        ...(followingRangeeDate ? [followingRangeeDate] : []),\n    ];\n    return findClosestDateAfterDate(fromDate, dates);\n};\nexport const getMaxDateForRangeEnd = ({\n    fromDate,\n    toDate,\n    maxDate,\n    dateRanges = [],\n    allowRangesToStartAndStopOnSameDate,\n}: {\n    fromDate?: Date;\n    toDate?: Date;\n    maxDate?: Date;\n    dateRanges?: DateRange[];\n    allowRangesToStartAndStopOnSameDate?: boolean;\n}): Date | undefined => {\n    const baseDate = fromDate || toDate;\n    if (!baseDate) {\n        return maxDate;\n    }\n    const follwingDateRange = getClosestDateRangeAfterDate(baseDate, dateRanges);\n    const followingDate = getFollowingDate(follwingDateRange, allowRangesToStartAndStopOnSameDate);\n    const dates: Date[] = [...(maxDate ? [maxDate] : []), ...(followingDate ? [followingDate] : [])];\n    return findClosestDateAfterDate(baseDate, dates);\n};\n\nconst getPreceedingDate = (\n    dateRange: DateRange | undefined,\n    allowRangesToStartAndStopOnSameDate?: boolean\n): Date | undefined => {\n    if (!dateRange) {\n        return undefined;\n    }\n    return allowRangesToStartAndStopOnSameDate ? dateRange.to : moment(dateRange.to).add(1, 'day').toDate();\n};\n\nexport const getMinDateForRangeStart = ({\n    toDate,\n    minDate,\n    dateRanges = [],\n    allowRangesToStartAndStopOnSameDate,\n}: {\n    toDate?: Date;\n    minDate?: Date;\n    dateRanges?: DateRange[];\n    allowRangesToStartAndStopOnSameDate?: boolean;\n}): Date | undefined => {\n    if (!toDate) {\n        return minDate;\n    }\n    const preceedingDateRange = getClosestDateRangeBeforeDate(toDate, dateRanges);\n    const preceedingDate = getPreceedingDate(preceedingDateRange, allowRangesToStartAndStopOnSameDate);\n    const dates: Date[] = [...(minDate ? [minDate] : []), ...(preceedingDate ? [preceedingDate] : [])];\n    return findClosestDateBeforeDate(toDate, dates);\n};\n\nexport const getMinDateForRangeEnd = ({\n    fromDate,\n    toDate,\n    minDate,\n    dateRanges: otherRanges = [],\n    allowRangesToStartAndStopOnSameDate,\n}: {\n    fromDate?: Date;\n    toDate?: Date;\n    minDate?: Date;\n    dateRanges?: DateRange[];\n    allowRangesToStartAndStopOnSameDate?: boolean;\n}): Date | undefined => {\n    const baseDate = fromDate || toDate;\n    if (!baseDate) {\n        return minDate;\n    }\n    const preceedingDateRange = getClosestDateRangeBeforeDate(baseDate, otherRanges);\n    const preceedingDate = getPreceedingDate(preceedingDateRange, allowRangesToStartAndStopOnSameDate);\n    const dates: Date[] = [\n        ...(fromDate ? [fromDate] : []),\n        ...(minDate ? [minDate] : []),\n        ...(preceedingDate ? [preceedingDate] : []),\n    ];\n    return findClosestDateBeforeOrEqualDate(baseDate, dates);\n};\n\ninterface DateRangePickerLimitations {\n    fromDateLimitations: DatepickerLimitiations;\n    toDateLimitations: DatepickerLimitiations;\n}\n\nexport const getDateRangePickerLimitations = (props: {\n    /** Selected from date */\n    fromDate?: Date;\n    /** Selected to date */\n    toDate?: Date;\n    /** Min allowed date */\n    minDate?: Date;\n    /** Max allowed date */\n    maxDate?: Date;\n    /** Other date ranges which become disabled in the datepicker */\n    dateRanges?: DateRange[];\n    /** Disallow selection of saturday and sunday */\n    disableWeekend?: boolean;\n    /** Allow one dateRange to start on the same date another ends */\n    allowRangesToStartAndStopOnSameDate?: boolean;\n}): DateRangePickerLimitations => {\n    return {\n        fromDateLimitations: {\n            minDate: getMinDateForRangeStart(props),\n            maxDate: getMaxDateForRangeStart(props),\n            disabledDateRanges: props.dateRanges,\n            disableWeekend: props.disableWeekend,\n        },\n        toDateLimitations: {\n            minDate: getMinDateForRangeEnd(props),\n            maxDate: getMaxDateForRangeEnd(props),\n            disabledDateRanges: props.dateRanges,\n            disableWeekend: props.disableWeekend,\n        },\n    };\n};\n","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { SkjemaGruppe } from 'nav-frontend-skjema';\nimport FormikDatepicker, {\n    DatePickerBaseProps,\n    DatepickerLimitiations,\n    DatePickerPresentationProps,\n} from '../formik-datepicker/FormikDatepicker';\nimport LabelWithInfo from '../helpers/label-with-info/LabelWithInfo';\nimport { getDateRangePickerLimitations } from './dateRangePickerUtils';\nimport './dateRangePicker.less';\nimport { ISOStringToDate } from '../formik-datepicker/datepickerUtils';\n\ninterface OwnProps<FieldName> {\n    legend?: string;\n    info?: string;\n    description?: React.ReactNode;\n    showYearSelector?: boolean;\n    fullscreenOverlay?: boolean;\n    fullScreenOnMobile?: boolean;\n    allowRangesToStartAndStopOnSameDate?: boolean;\n    fromInputProps: DatePickerBaseProps<FieldName>;\n    toInputProps: DatePickerBaseProps<FieldName>;\n}\n\nexport type FormikDateRangePickerProps<FieldName> = OwnProps<FieldName> &\n    DatePickerPresentationProps &\n    DatepickerLimitiations;\n\nfunction FormikDateRangePicker<FieldName>({\n    legend,\n    fromInputProps,\n    toInputProps,\n    description,\n    minDate,\n    maxDate,\n    disableWeekend,\n    disabledDateRanges,\n    showYearSelector,\n    fullScreenOnMobile,\n    fullscreenOverlay,\n    allowRangesToStartAndStopOnSameDate,\n    info,\n}: FormikDateRangePickerProps<FieldName>) {\n    const { values } = useFormikContext<any>();\n    const fromDate = ISOStringToDate(values[fromInputProps.name]);\n    const toDate = ISOStringToDate(values[toInputProps.name]);\n    const { fromDateLimitations, toDateLimitations } = getDateRangePickerLimitations({\n        fromDate,\n        toDate,\n        minDate,\n        maxDate,\n        dateRanges: disabledDateRanges,\n        disableWeekend,\n        allowRangesToStartAndStopOnSameDate,\n    });\n    return (\n        <SkjemaGruppe\n            legend={legend ? <LabelWithInfo info={info}>{legend}</LabelWithInfo> : undefined}\n            description={description}\n            className=\"dateRangePicker\">\n            <div className=\"dateRangePicker__flexContainer\">\n                <FormikDatepicker<FieldName>\n                    {...fromInputProps}\n                    {...{ fullscreenOverlay, fullScreenOnMobile, showYearSelector }}\n                    {...fromDateLimitations}\n                />\n                <FormikDatepicker<FieldName>\n                    {...toInputProps}\n                    {...{ fullscreenOverlay, fullScreenOnMobile, showYearSelector }}\n                    {...toDateLimitations}\n                />\n            </div>\n        </SkjemaGruppe>\n    );\n}\n\nexport default FormikDateRangePicker;\n"],"sourceRoot":""}